{"version":3,"sources":["rule/foundation.ts","rule/board/row.ts","rule/board/line.ts","rule/board/square.ts","rule/board/forbidden.ts","rule/board/board.ts","rule/game/game.ts","components/appState.ts","components/preference.ts","components/system.ts","components/BoardComponent/Base.tsx","components/BoardComponent/Properties.tsx","components/BoardComponent/Stones.tsx","components/BoardComponent/index.tsx","components/Main/Board.tsx","components/Main/Controller/DownloadButton.tsx","components/Main/Controller/PreferencePopover.tsx","components/Main/Controller/index.tsx","components/Main/index.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["equal","a","b","xCode","x","charAt","yCode","toString","code","y","point","indexOf","toUpperCase","parseInt","slice","BLACK_PATTERNS","two","row","kind","size","eyes","rowStart","blacks","whites","blmask","whmask","closedThree","three","four","five","overline","WHITE_PATTERNS","Line","init","rows","this","Error","RowsProxy","black","i","overlay","is","stones","n","length","mask","result","pat","blackCache","whiteCache","undefined","cache","compute","patterns","blacks_","appendDummies","whites_","size_","flatMap","p","within","pattern","filter","push","search","map","start","e","Square","facets","newOrthogonalLines","newDiagonalLines","bsize","direction","lines","toIndex","j","newLine","put","ps","m","Map","has","get","set","l","putMulti","remove","find","d","reverse","toSting","join","toPoint","Array","fill","_","lrow","end","forbidden","square","doubleFour","doubleThree","r","between","newFours","distinct","next","newThrees","trueThrees","t","s","srows","srow","findIndex","adjacent","xd","yd","Math","abs","Board","properties","forbiddensCache","PropertiesProxy","hasStone","bi","q","wi","computeForbiddens","Game","moves","codes","from","matchAll","movable","isBlackTurn","AppState","game","cursor","board","split","gameCode","cursorCode","current","fork","canMove","move","canUndo","undo","canReset","isLast","isStart","forked","jump","AppStateContext","createContext","parseAppState","windowLocationHash","console","log","Preference","showIndices","showOrders","emphasizeLastMove","showForbiddens","showPropertyRows","showPropertyEyes","PreferenceContext","loadPreference","localStoragePreference","partial","JSON","parse","System","windowInnerWidth","N","W","C","P","cx","cy","bx","by","adjust","min","max","round","SystemContext","Rulers","system","useContext","verticalLines","indices","key","x1","y1","x2","y2","stroke","strokeWidth","rulerStrokeWidth","horizontalLines","Stars","Indices","xIndices","indexPadding","textAnchor","fontSize","indexFontSize","fontFamily","yIndices","dominantBaseline","Default","Forbiddens","points","crosses","c","forbiddenStrokeWidth","opacity","PropertyRows","prop","propertyRowStrokeWidth","strokeLinecap","strokeDasharray","propertyRowStrokeDasharray","PropertyEyes","emphasized","gs","rects","fillOpacity","Diamond","transform","width","height","forbiddens","Stones","Orders","texts","orderFontSize","Stone","stoneStrokeWidth","strokeOpacity","LastMarker","id","onClickPoint","preference","onClick","base","currentTarget","getBoundingClientRect","clientX","clientY","className","Base","Properties","appState","setAppState","BoardComponent","downloadImage","svgElem","document","getElementById","svgData","XMLSerializer","serializeToString","imageElem","Image","src","btoa","unescape","encodeURIComponent","canvasElem","createElement","baseVal","value","ctx","getContext","fillStyle","fillRect","onload","drawImage","href","toDataURL","setAttribute","dispatchEvent","MouseEvent","buttonSize","IconButton","icon","FiDownload","aria-label","variant","Box","hidden","Provider","setPreference","isAllChecked","Popover","placement","FiToggleRight","zIndex","fontWeight","Flex","justify","align","FormLabel","htmlFor","Switch","isChecked","onChange","ResetPopover","onClose","FiLoader","isDisabled","Button","as","variantColor","reset","justifyContent","alignItems","PreferencePopover","toStart","FiChevronsLeft","backward","FiChevronLeft","forward","FiChevronRight","toLast","FiChevronsRight","FiX","DownloadButton","Stack","spacing","my","Text","textAlign","color","Controller","App","window","innerWidth","location","hash","useState","history","replaceState","useAppState","useEffect","localStorage","getItem","setItem","stringify","usePreference","ThemeProvider","CSSReset","Main","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d7b7c48a.chunk.js","sourcesContent":["export const N_LINES = 15\n\nexport const X_CODES = 'ABCDEFGHIJKLMNO'\n\nexport type Point = [number, number]\n\nexport const equal = (a: Point, b: Point): boolean => a[0] === b[0] && a[1] === b[1]\n\nexport const xCode = (x: number) => X_CODES.charAt(x - 1)\n\nexport const yCode = (x: number) => x.toString()\n\nexport const code = ([x, y]: Point): string => `${xCode(x)}${yCode(y)}`\n\nexport const point = (code: string): Point | undefined => {\n  const x = X_CODES.indexOf(code[0].toUpperCase()) + 1\n  const y = parseInt(code.slice(1))\n  if (x < 1 || N_LINES < x || y < 1 || N_LINES < y) return undefined\n  return [x, y]\n}\n","export type Stones = number // stones as bits, e.g. 0b00111010\n\nexport const rowKinds = ['two', 'closedThree', 'three', 'four', 'five', 'overline'] as const\nexport type RowKind = typeof rowKinds[number]\n\nexport type Row = {\n  readonly kind: RowKind\n  readonly size: number\n  readonly eyes: number[] // index on which the row will promote if a stone is put\n}\n\nexport type RowPattern = {\n  readonly row: Row\n  readonly size: number\n  readonly rowStart: number\n  readonly blacks: Stones\n  readonly blmask: Stones\n  readonly whites: Stones\n  readonly whmask: Stones\n}\n\nexport const search = (blacks: Stones, whites: Stones, within: number, pattern: RowPattern): number[] => {\n  if (within < pattern.size) return []\n  const filter: Stones = 2 ** pattern.size - 1 // e.g. 6 -> 0b111111\n\n  const result: number[] = []\n  for (let i = 0; i <= within - pattern.size; i++) {\n    if (\n      (blacks & filter & ~pattern.blmask) === pattern.blacks &&\n      (whites & filter & ~pattern.whmask) === pattern.whites\n    ) {\n      result.push(i + pattern.rowStart)\n    }\n    blacks >>>= 1\n    whites >>>= 1\n  }\n  return result\n}\n\nconst BLACK_TWO_PATTERNS: RowPattern[] = [\n  {\n    row: { kind: 'two', size: 4, eyes: [2, 3] },\n    size: 8,\n    rowStart: 2,\n    blacks: 0b00001100,\n    whites: 0b00000000,\n    blmask: 0b00000000,\n    whmask: 0b10000001,\n  },\n  {\n    row: { kind: 'two', size: 4, eyes: [1, 3] },\n    size: 8,\n    rowStart: 2,\n    blacks: 0b00010100,\n    whites: 0b00000000,\n    blmask: 0b00000000,\n    whmask: 0b10000001,\n  },\n  {\n    row: { kind: 'two', size: 4, eyes: [0, 3] },\n    size: 8,\n    rowStart: 2,\n    blacks: 0b00011000,\n    whites: 0b00000000,\n    blmask: 0b00000000,\n    whmask: 0b10000001,\n  },\n  {\n    row: { kind: 'two', size: 4, eyes: [1, 2] },\n    size: 8,\n    rowStart: 2,\n    blacks: 0b00100100,\n    whites: 0b00000000,\n    blmask: 0b00000000,\n    whmask: 0b10000001,\n  },\n  {\n    row: { kind: 'two', size: 4, eyes: [0, 2] },\n    size: 8,\n    rowStart: 2,\n    blacks: 0b00101000,\n    whites: 0b00000000,\n    blmask: 0b00000000,\n    whmask: 0b10000001,\n  },\n  {\n    row: { kind: 'two', size: 4, eyes: [0, 1] },\n    size: 8,\n    rowStart: 2,\n    blacks: 0b00110000,\n    whites: 0b00000000,\n    blmask: 0b00000000,\n    whmask: 0b10000001,\n  },\n]\n\nconst BLACK_CLOSED_THREE_PATTERNS: RowPattern[] = [\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [2, 3] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0100110,\n    whites: 0b0000000,\n    blmask: 0b0000000,\n    whmask: 0b1000001,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [1, 3] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0101010,\n    whites: 0b0000000,\n    blmask: 0b0000000,\n    whmask: 0b1000001,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [1, 2] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0110010,\n    whites: 0b0000000,\n    blmask: 0b0000000,\n    whmask: 0b1000001,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [3, 4] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0001110,\n    whites: 0b0000001,\n    blmask: 0b0000000,\n    whmask: 0b1000000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [3, 5] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0010110,\n    whites: 0b0000001,\n    blmask: 0b0000000,\n    whmask: 0b1000000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [2, 5] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0011010,\n    whites: 0b0000001,\n    blmask: 0b0000000,\n    whmask: 0b1000000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [0, 3] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0101100,\n    whites: 0b1000000,\n    blmask: 0b0000000,\n    whmask: 0b0000001,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [0, 2] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0110100,\n    whites: 0b1000000,\n    blmask: 0b0000000,\n    whmask: 0b0000001,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [0, 1] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0111000,\n    whites: 0b1000000,\n    blmask: 0b0000000,\n    whmask: 0b0000001,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [1, 5] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0011100,\n    whites: 0b1000001,\n    blmask: 0b0000000,\n    whmask: 0b0000000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [1, 4] },\n    size: 8,\n    rowStart: 2,\n    blacks: 0b00110101,\n    whites: 0b00000000,\n    blmask: 0b00000000,\n    whmask: 0b10000000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [0, 3] },\n    size: 8,\n    rowStart: 1,\n    blacks: 0b10101100,\n    whites: 0b00000000,\n    blmask: 0b00000000,\n    whmask: 0b00000001,\n  },\n]\n\nconst BLACK_THREE_PATTERNS: RowPattern[] = [\n  {\n    row: { kind: 'three', size: 6, eyes: [4] },\n    size: 8,\n    rowStart: 1,\n    blacks: 0b00011100,\n    whites: 0b00000000,\n    blmask: 0b00000000,\n    whmask: 0b10000001,\n  },\n  {\n    row: { kind: 'three', size: 6, eyes: [3] },\n    size: 8,\n    rowStart: 1,\n    blacks: 0b00101100,\n    whites: 0b00000000,\n    blmask: 0b00000000,\n    whmask: 0b10000001,\n  },\n  {\n    row: { kind: 'three', size: 6, eyes: [2] },\n    size: 8,\n    rowStart: 1,\n    blacks: 0b00110100,\n    whites: 0b00000000,\n    blmask: 0b00000000,\n    whmask: 0b10000001,\n  },\n  {\n    row: { kind: 'three', size: 6, eyes: [1] },\n    size: 8,\n    rowStart: 1,\n    blacks: 0b00111000,\n    whites: 0b00000000,\n    blmask: 0b00000000,\n    whmask: 0b10000001,\n  },\n]\n\nconst BLACK_FOUR_PATTERNS: RowPattern[] = [\n  {\n    row: { kind: 'four', size: 5, eyes: [4] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0011110,\n    whites: 0b0000000,\n    blmask: 0b0000000,\n    whmask: 0b1000001,\n  },\n  {\n    row: { kind: 'four', size: 5, eyes: [3] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0101110,\n    whites: 0b0000000,\n    blmask: 0b0000000,\n    whmask: 0b1000001,\n  },\n  {\n    row: { kind: 'four', size: 5, eyes: [2] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0110110,\n    whites: 0b0000000,\n    blmask: 0b0000000,\n    whmask: 0b1000001,\n  },\n  {\n    row: { kind: 'four', size: 5, eyes: [1] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0111010,\n    whites: 0b0000000,\n    blmask: 0b0000000,\n    whmask: 0b1000001,\n  },\n  {\n    row: { kind: 'four', size: 5, eyes: [0] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0111100,\n    whites: 0b0000000,\n    blmask: 0b0000000,\n    whmask: 0b1000001,\n  },\n]\n\nconst BLACK_FIVE_PATTERNS: RowPattern[] = [\n  {\n    row: { kind: 'five', size: 5, eyes: [] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0111110,\n    whites: 0b0000000,\n    blmask: 0b0000000,\n    whmask: 0b1000001,\n  },\n]\n\nconst BLACK_OVERLINE_PATTERNS: RowPattern[] = [\n  {\n    row: { kind: 'overline', size: 6, eyes: [] },\n    size: 6,\n    rowStart: 0,\n    blacks: 0b111111,\n    whites: 0b000000,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n]\n\nconst WHITE_TWO_PATTERNS: RowPattern[] = [\n  {\n    row: { kind: 'two', size: 4, eyes: [2, 3] },\n    size: 6,\n    rowStart: 1,\n    blacks: 0b000000,\n    whites: 0b000110,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'two', size: 4, eyes: [1, 3] },\n    size: 6,\n    rowStart: 1,\n    blacks: 0b000000,\n    whites: 0b001010,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'two', size: 4, eyes: [0, 3] },\n    size: 6,\n    rowStart: 1,\n    blacks: 0b000000,\n    whites: 0b001100,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'two', size: 4, eyes: [1, 2] },\n    size: 6,\n    rowStart: 1,\n    blacks: 0b000000,\n    whites: 0b010010,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'two', size: 4, eyes: [0, 2] },\n    size: 6,\n    rowStart: 1,\n    blacks: 0b000000,\n    whites: 0b010100,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'two', size: 4, eyes: [0, 1] },\n    size: 6,\n    rowStart: 1,\n    blacks: 0b000000,\n    whites: 0b011000,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n]\n\nconst WHITE_CLOSED_THREE_PATTERNS: RowPattern[] = [\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [2, 3] },\n    size: 5,\n    rowStart: 0,\n    blacks: 0b00000,\n    whites: 0b10011,\n    blmask: 0b00000,\n    whmask: 0b00000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [1, 3] },\n    size: 5,\n    rowStart: 0,\n    blacks: 0b00000,\n    whites: 0b10101,\n    blmask: 0b00000,\n    whmask: 0b00000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [1, 2] },\n    size: 5,\n    rowStart: 0,\n    blacks: 0b00000,\n    whites: 0b11001,\n    blmask: 0b00000,\n    whmask: 0b00000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [3, 4] },\n    size: 6,\n    rowStart: 1,\n    blacks: 0b000001,\n    whites: 0b001110,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [3, 5] },\n    size: 6,\n    rowStart: 1,\n    blacks: 0b000001,\n    whites: 0b010110,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [2, 5] },\n    size: 6,\n    rowStart: 1,\n    blacks: 0b000001,\n    whites: 0b011010,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [0, 3] },\n    size: 6,\n    rowStart: 0,\n    blacks: 0b100000,\n    whites: 0b010110,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [0, 2] },\n    size: 6,\n    rowStart: 0,\n    blacks: 0b100000,\n    whites: 0b011010,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [0, 1] },\n    size: 6,\n    rowStart: 0,\n    blacks: 0b100000,\n    whites: 0b011100,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [1, 5] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b1000001,\n    whites: 0b0011100,\n    blmask: 0b0000000,\n    whmask: 0b0000000,\n  },\n]\n\nconst WHITE_THREE_PATTERNS: RowPattern[] = [\n  {\n    row: { kind: 'three', size: 6, eyes: [4] },\n    size: 6,\n    rowStart: 0,\n    blacks: 0b000000,\n    whites: 0b001110,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'three', size: 6, eyes: [3] },\n    size: 6,\n    rowStart: 0,\n    blacks: 0b000000,\n    whites: 0b010110,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'three', size: 6, eyes: [2] },\n    size: 6,\n    rowStart: 0,\n    blacks: 0b000000,\n    whites: 0b011010,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'three', size: 6, eyes: [1] },\n    size: 6,\n    rowStart: 0,\n    blacks: 0b000000,\n    whites: 0b011100,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n]\n\nconst WHITE_FOUR_PATTERNS: RowPattern[] = [\n  {\n    row: { kind: 'four', size: 5, eyes: [4] },\n    size: 5,\n    rowStart: 0,\n    blacks: 0b00000,\n    whites: 0b01111,\n    blmask: 0b00000,\n    whmask: 0b00000,\n  },\n  {\n    row: { kind: 'four', size: 5, eyes: [3] },\n    size: 5,\n    rowStart: 0,\n    blacks: 0b00000,\n    whites: 0b10111,\n    blmask: 0b00000,\n    whmask: 0b00000,\n  },\n  {\n    row: { kind: 'four', size: 5, eyes: [2] },\n    size: 5,\n    rowStart: 0,\n    blacks: 0b00000,\n    whites: 0b11011,\n    blmask: 0b00000,\n    whmask: 0b00000,\n  },\n  {\n    row: { kind: 'four', size: 5, eyes: [1] },\n    size: 5,\n    rowStart: 0,\n    blacks: 0b00000,\n    whites: 0b11101,\n    blmask: 0b00000,\n    whmask: 0b00000,\n  },\n  {\n    row: { kind: 'four', size: 5, eyes: [0] },\n    size: 5,\n    rowStart: 0,\n    blacks: 0b00000,\n    whites: 0b11110,\n    blmask: 0b00000,\n    whmask: 0b00000,\n  },\n]\n\nconst WHITE_FIVE_PATTERNS: RowPattern[] = [\n  {\n    row: { kind: 'five', size: 5, eyes: [] },\n    size: 5,\n    rowStart: 0,\n    blacks: 0b00000,\n    whites: 0b11111,\n    blmask: 0b00000,\n    whmask: 0b00000,\n  }\n]\n\nexport const BLACK_PATTERNS: Record<RowKind, RowPattern[]> = {\n  two: BLACK_TWO_PATTERNS,\n  closedThree: BLACK_CLOSED_THREE_PATTERNS,\n  three: BLACK_THREE_PATTERNS,\n  four: BLACK_FOUR_PATTERNS,\n  five: BLACK_FIVE_PATTERNS,\n  overline: BLACK_OVERLINE_PATTERNS,\n}\n\nexport const WHITE_PATTERNS: Record<RowKind, RowPattern[]> = {\n  two: WHITE_TWO_PATTERNS,\n  closedThree: WHITE_CLOSED_THREE_PATTERNS,\n  three: WHITE_THREE_PATTERNS,\n  four: WHITE_FOUR_PATTERNS,\n  five: WHITE_FIVE_PATTERNS,\n  overline: [],\n}\n\nexport const emptyRowsCache = (): Record<RowKind, undefined> => ({\n  two: undefined,\n  closedThree: undefined,\n  three: undefined,\n  four: undefined,\n  five: undefined,\n  overline: undefined,\n})\n","import {\n  Stones, RowKind, search, emptyRowsCache,\n  BLACK_PATTERNS, WHITE_PATTERNS,\n} from './row'\n\nconst INT_SIZE = 32\n\nexport class Line {\n  readonly size: number\n  readonly blacks: Stones\n  readonly whites: Stones\n  readonly rows: RowsProxy\n\n  constructor (\n    init:\n      | Pick<Line, 'size'>\n      | Pick<Line, 'size' | 'blacks' | 'whites'>\n  ) {\n    this.size = init.size\n    if (this.size < 1 || this.size > INT_SIZE) throw new Error('Wrong size')\n\n    if ('blacks' in init && 'whites' in init) {\n      if ((init.blacks & init.whites) !== 0b0) throw new Error('Black and white stones are overlapping')\n      this.blacks = init.blacks\n      this.whites = init.whites\n    } else {\n      this.blacks = 0b0\n      this.whites = 0b0\n    }\n\n    this.rows = new RowsProxy(this.size, this.blacks, this.whites)\n  }\n\n  put (black: boolean, i: number): Line {\n    return this.overlay(black, 0b1 << i)\n  }\n\n  putMulti (black: boolean, is: number[]): Line {\n    let stones = 0b0\n    for (let n = 0; n < is.length; n++) {\n      stones |= 0b1 << is[n]\n    }\n    return this.overlay(black, stones)\n  }\n\n  remove (i: number): Line {\n    const mask = 0b1 << i\n    const [blacks, whites] = [this.blacks & ~mask, this.whites & ~mask]\n    if (blacks === this.blacks && whites === this.whites) return this\n    return new Line({ size: this.size, blacks: blacks, whites: whites })\n  }\n\n  private overlay (black: boolean, stones: Stones): Line {\n    if (black) {\n      const [blacks, whites] = [this.blacks | stones, this.whites & ~stones]\n      if (blacks === this.blacks) return this\n      return new Line({ size: this.size, blacks: blacks, whites: whites })\n    } else {\n      const [whites, blacks] = [this.whites | stones, this.blacks & ~stones]\n      if (whites === this.whites) return this\n      return new Line({ size: this.size, blacks: blacks, whites: whites })\n    }\n  }\n\n  toSting (): string {\n    let result = ''\n    for (let i = 0; i < this.size; i++) {\n      const pat = 0b1 << i\n      result += (this.blacks & pat) !== 0b0 ? 'o' : ((this.whites & pat) !== 0b0 ? 'x' : '-')\n    }\n    return result\n  }\n}\n\ntype LineRow = {\n  readonly kind: RowKind\n  readonly start: number\n  readonly size: number\n  readonly eyes: number[]\n}\n\nclass RowsProxy {\n  private readonly size: number\n  private readonly blacks: Stones\n  private readonly whites: Stones\n  private readonly blackCache: Record<RowKind, LineRow[] | undefined>\n  private readonly whiteCache: Record<RowKind, LineRow[] | undefined>\n\n  constructor (size: number, blacks: Stones, whites: Stones) {\n    this.size = size\n    this.blacks = blacks\n    this.whites = whites\n\n    this.blackCache = emptyRowsCache()\n    this.whiteCache = emptyRowsCache()\n  }\n\n  get (black: boolean, kind: RowKind): LineRow[] {\n    const cache = black ? this.blackCache : this.whiteCache\n    if (cache[kind] === undefined) {\n      cache[kind] = this.compute(black, kind)\n    }\n    return cache[kind]!\n  }\n\n  private compute (black: boolean, kind: RowKind): LineRow[] {\n    const patterns = black ? BLACK_PATTERNS[kind] : WHITE_PATTERNS[kind]\n\n    // append dummy opponent stones to both line ends\n    const blacks_ = black ? this.blacks << 1 : appendDummies(this.blacks, this.size)\n    const whites_ = black ? appendDummies(this.whites, this.size) : this.whites << 1\n    const size_ = this.size + 2\n\n    return patterns.flatMap(\n      p => search(blacks_, whites_, size_, p).map(\n        i => {\n          // fix index with dummy\n          const start = i - 1\n          return {\n            kind: p.row.kind,\n            start: start,\n            size: p.row.size,\n            eyes: p.row.eyes.map(e => e + start)\n          }\n        }\n      )\n    )\n  }\n}\n\n// e.g. (0b001110, 6) => 0b10011101\nconst appendDummies = (stones: Stones, size: number): Stones => (stones << 1) | 0b1 | (0b1 << (size + 1))\n","import { Point } from '../foundation'\nimport { Line } from './line'\nimport { RowKind, emptyRowsCache } from './row'\n\nconst directions = ['vertical', 'horizontal', 'ascending', 'descending'] as const\ntype Direction = typeof directions[number]\n\ntype Index = [number, number]\n\ntype Facet = [Direction, Line[]]\n\nexport class Square {\n  readonly size: number\n  readonly facets: Facet[]\n  readonly rows: RowsProxy\n\n  constructor (\n    init:\n      | Pick<Square, 'size'>\n      | Pick<Square, 'size' | 'facets'>\n  ) {\n    this.size = init.size\n\n    if ('facets' in init) {\n      this.facets = init.facets\n    } else {\n      this.facets = [\n        ['vertical', newOrthogonalLines(this.size)],\n        ['horizontal', newOrthogonalLines(this.size)],\n        ['ascending', newDiagonalLines(this.size)],\n        ['descending', newDiagonalLines(this.size)],\n      ]\n    }\n\n    this.rows = new RowsProxy(this.size, this.facets)\n  }\n\n  put (black: boolean, p: Point): Square {\n    const bsize = this.size\n    const facets = this.facets.map(\n      ([direction, lines]) => {\n        const [i, j] = toIndex(p, direction, bsize)\n        const newLine = lines[i].put(black, j)\n        const newLines = [...lines.slice(0, i), newLine, ...lines.slice(i + 1, lines.length)]\n        return [direction, newLines] as Facet\n      }\n    )\n    return new Square({ size: this.size, facets: facets })\n  }\n\n  putMulti (black: boolean, ps: Point[]): Square {\n    const bsize = this.size\n    const facets = this.facets.map(\n      ([direction, lines]) => {\n        const m = new Map<number, number[]>()\n        for (let n = 0; n < ps.length; n++) {\n          const [i, j] = toIndex(ps[n], direction, bsize)\n          if (m.has(i)) {\n            m.get(i)!.push(j)\n          } else {\n            m.set(i, [j])\n          }\n        }\n        const newLines = lines.map(\n          (l, i) => m.has(i) ? l.putMulti(black, m.get(i)!) : l\n        )\n        return [direction, newLines] as Facet\n      }\n    )\n    return new Square({ size: this.size, facets: facets })\n  }\n\n  remove (p: Point): Square {\n    const bsize = this.size\n    const facets = this.facets.map(\n      ([direction, lines]) => {\n        const [i, j] = toIndex(p, direction, bsize)\n        const newLine = lines[i].remove(j)\n        const newLines = [...lines.slice(0, i), newLine, ...lines.slice(i + 1, lines.length)]\n        return [direction, newLines] as Facet\n      }\n    )\n    return new Square({ size: this.size, facets: facets })\n  }\n\n  toString (): string {\n    return this.facets.find(([d, _]) => d === 'horizontal')![1].slice().reverse().map(l => l.toSting()).join('\\n')\n  }\n}\n\nconst toIndex = ([x, y]: Point, direction: Direction, bsize: number): Index => {\n  let i: number, j: number\n  switch (direction) {\n    case 'vertical':\n      return [x - 1, y - 1]\n    case 'horizontal':\n      return [y - 1, x - 1]\n    case 'ascending':\n      i = (x - 1) + (bsize - y)\n      j = i < bsize ? (x - 1) : (y - 1)\n      return [i, j]\n    case 'descending':\n      i = (x - 1) + (y - 1)\n      j = i < bsize ? (x - 1) : (bsize - y)\n      return [i, j]\n  }\n}\n\nconst toPoint = ([i, j]: Index, direction: Direction, bsize: number): Point => {\n  let x: number, y: number\n  switch (direction) {\n    case 'vertical':\n      return [i + 1, j + 1]\n    case 'horizontal':\n      return [j + 1, i + 1]\n    case 'ascending':\n      x = i < bsize ? j + 1 : (i + 1) + (j + 1) - bsize\n      y = i < bsize ? bsize - (i + 1) + (j + 1) : j + 1\n      return [x, y]\n    case 'descending':\n      x = i < bsize ? j + 1 : (i + 1) + (j + 1) - bsize\n      y = i < bsize ? (i + 1) - j : bsize - j\n      return [x, y]\n  }\n}\n\nconst newOrthogonalLines = (size: number): Line[] => new Array(size).fill(null).map(\n  () => new Line({ size })\n)\n\nconst newDiagonalLines = (size: number): Line[] => new Array(size * 2 - 1).fill(null).map(\n  (_, i) => new Line({ size: i < size ? i + 1 : size * 2 - 1 - i })\n)\n\nexport type SquareRow = {\n  readonly kind: RowKind\n  readonly direction: Direction\n  readonly start: Point\n  readonly end: Point\n  readonly eyes: Point[]\n}\n\nclass RowsProxy {\n  private readonly size: number\n  private readonly facets: Facet[]\n  private readonly blackCache: Record<RowKind, SquareRow[] | undefined>\n  private readonly whiteCache: Record<RowKind, SquareRow[] | undefined>\n\n  constructor (size: number, facets: Facet[]) {\n    this.size = size\n    this.facets = facets\n\n    this.blackCache = emptyRowsCache()\n    this.whiteCache = emptyRowsCache()\n  }\n\n  get (black: boolean, kind: RowKind): SquareRow[] {\n    const cache = black ? this.blackCache : this.whiteCache\n    if (cache[kind] === undefined) {\n      cache[kind] = this.compute(black, kind)\n    }\n    return cache[kind]!\n  }\n\n  private compute (black: boolean, kind: RowKind): SquareRow[] {\n    const bsize = this.size\n    return this.facets.flatMap(\n      ([direction, lines]) => lines.flatMap(\n        (l, i) => l.rows.get(black, kind).map(\n          lrow => ({\n            kind: lrow.kind,\n            direction: direction,\n            start: toPoint([i, lrow.start], direction, bsize),\n            end: toPoint([i, lrow.start + lrow.size - 1], direction, bsize),\n            eyes: lrow.eyes.map(j => toPoint([i, j], direction, bsize)),\n          })\n        )\n      )\n    )\n  }\n}\n","import { Point } from '../foundation'\nimport { Square, SquareRow } from './square'\n\nexport const forbiddenKinds = ['doubleThree', 'doubleFour', 'overline'] as const\nexport type ForbiddenKind = typeof forbiddenKinds[number]\n\nexport const forbidden = (square: Square, point: Point): ForbiddenKind | undefined => {\n  if (overline(square, point)) {\n    return 'overline'\n  } else if (doubleFour(square, point)) {\n    return 'doubleFour'\n  } else if (doubleThree(square, point)) {\n    return 'doubleThree'\n  }\n}\n\nconst overline = (square: Square, point: Point): boolean => {\n  const next = square.put(true, point)\n  const newOverlines = next.rows.get(true, 'overline').filter(r => between(point, r))\n  return newOverlines.length > 0\n}\n\nconst doubleFour = (square: Square, point: Point): boolean => {\n  const next = square.put(true, point)\n  const newFours = next.rows.get(true, 'four').filter(r => between(point, r))\n  if (newFours.length < 2) return false\n\n  // checking not open four\n  return distinct(newFours).length >= 2\n}\n\nconst doubleThree = (square: Square, point: Point): boolean => {\n  const next = square.put(true, point)\n  const newThrees = next.rows.get(true, 'three').filter(r => between(point, r))\n  if (newThrees.length < 2) return false\n\n  // checking not fake three\n  const trueThrees = newThrees.filter(t => !forbidden(next, t.eyes[0]))\n  if (trueThrees.length < 2) return false\n\n  // checking not open three\n  return distinct(trueThrees).length >= 2\n}\n\nconst between = (p: Point, r: SquareRow): boolean => {\n  const [s, e] = [r.start, r.end]\n  switch (r.direction) {\n    case 'vertical':\n      return p[0] === s[0] && (s[1] <= p[1] && p[1] <= e[1])\n    case 'horizontal':\n      return p[1] === s[1] && (s[0] <= p[0] && p[0] <= e[0])\n    case 'ascending':\n      return (s[0] <= p[0] && p[0] <= e[0]) && (p[0] - s[0] === p[1] - s[1])\n    case 'descending':\n      return (s[0] <= p[0] && p[0] <= e[0]) && (p[0] - s[0] === s[1] - p[1])\n  }\n}\n\nconst distinct = (srows: SquareRow[]): SquareRow[] => {\n  const result: SquareRow[] = []\n  for (let i = 0; i < srows.length; i++) {\n    const srow = srows[i]\n    if (result.findIndex(r => adjacent(srow, r)) < 0) {\n      result.push(srow)\n    }\n  }\n  return result\n}\n\nconst adjacent = (a: SquareRow, b: SquareRow): boolean => {\n  if (a.direction !== b.direction) return false\n  const [xd, yd] = [a.start[0] - b.start[0], a.start[1] - b.start[1]]\n  switch (a.direction) {\n    case 'vertical':\n      return xd === 0 && Math.abs(yd) === 1\n    case 'horizontal':\n      return Math.abs(xd) === 1 && yd === 0\n    case 'ascending':\n      return Math.abs(xd) === 1 && xd === yd\n    case 'descending':\n      return Math.abs(xd) === 1 && xd === -yd\n  }\n}\n","import { Point, equal } from '../foundation'\nimport { Square } from './square'\nimport { forbidden } from './forbidden'\nimport { RowKind, emptyRowsCache } from './row'\n\nexport class Board {\n  readonly size: number\n  readonly blacks: Point[]\n  readonly whites: Point[]\n  readonly properties: PropertiesProxy\n\n  private readonly square: Square\n\n  private forbiddensCache: Point[] | undefined\n\n  constructor (\n    init:\n      | Pick<Board, 'size'>\n      | Pick<Board, 'size' | 'blacks' | 'whites'>\n      | Pick<Board, 'size' | 'blacks' | 'whites'> & { square: Square }\n  ) {\n    this.size = init.size\n\n    if ('blacks' in init && 'whites' in init) {\n      this.blacks = init.blacks\n      this.whites = init.whites\n    } else {\n      this.blacks = []\n      this.whites = []\n    }\n\n    if ('square' in init) {\n      this.square = init.square\n    } else {\n      this.square = new Square({ size: this.size }).putMulti(true, this.blacks).putMulti(false, this.whites)\n    }\n\n    this.properties = new PropertiesProxy(this.square)\n  }\n\n  put (black: boolean, p: Point): Board {\n    if (this.hasStone(p)) return this\n    return new Board({\n      size: this.size,\n      blacks: black ? [...this.blacks, p] : this.blacks,\n      whites: black ? this.whites : [...this.whites, p],\n      square: this.square.put(black, p),\n    })\n  }\n\n  remove (p: Point): Board {\n    if (!this.hasStone(p)) return this\n    const bi = this.blacks.findIndex(q => equal(p, q))\n    const wi = this.whites.findIndex(q => equal(p, q))\n    return new Board({\n      size: this.size,\n      blacks: bi >= 0 ? remove(this.blacks, bi) : this.blacks,\n      whites: wi >= 0 ? remove(this.whites, wi) : this.whites,\n      square: this.square.remove(p),\n    })\n  }\n\n  hasStone (p: Point): boolean {\n    return (\n      (this.blacks.findIndex(q => equal(p, q)) >= 0) ||\n      (this.whites.findIndex(q => equal(p, q)) >= 0)\n    )\n  }\n\n  forbidden (p: Point): boolean {\n    return !this.hasStone(p) && forbidden(this.square, p) !== undefined\n  }\n\n  get forbiddens (): Point[] {\n    if (this.forbiddensCache === undefined) {\n      this.forbiddensCache = this.computeForbiddens()\n    }\n    return this.forbiddensCache\n  }\n\n  private computeForbiddens (): Point[] {\n    const result: Point[] = []\n    for (let x = 1; x <= this.size; x++) {\n      for (let y = 1; y <= this.size; y++) {\n        if (this.hasStone([x, y])) continue\n        if (forbidden(this.square, [x, y])) {\n          result.push([x, y])\n        }\n      }\n    }\n    return result\n  }\n\n  toString (): string {\n    return this.square.toString()\n  }\n}\n\nexport type Property = {\n  kind: RowKind\n  start: Point\n  end: Point // inclusive\n  eyes: Point[]\n}\n\nclass PropertiesProxy {\n  private readonly square: Square\n  private readonly blackCache: Record<RowKind, Property[] | undefined>\n  private readonly whiteCache: Record<RowKind, Property[] | undefined>\n\n  constructor (square: Square) {\n    this.square = square\n\n    this.blackCache = emptyRowsCache()\n    this.whiteCache = emptyRowsCache()\n  }\n\n  get (black: boolean, kind: RowKind): Property[] {\n    const cache = black ? this.blackCache : this.whiteCache\n    if (cache[kind] === undefined) {\n      cache[kind] = this.compute(black, kind)\n    }\n    return cache[kind]!\n  }\n\n  private compute (black: boolean, kind: RowKind): Property[] {\n    return this.square.rows.get(black, kind).map(\n      srow => ({\n        kind: srow.kind,\n        start: srow.start,\n        end: srow.end,\n        eyes: srow.eyes,\n      })\n    )\n  }\n}\n\nconst remove = <T>(a: Array<T>, i: number): Array<T> => [...a.slice(0, i), ...a.slice(i + 1, a.length)]\n","import { code, equal, Point, point } from '../foundation'\n\nexport class Game {\n  readonly moves: Point[]\n\n  constructor (init: {} | { code: string } | Pick<Game, 'moves'>) {\n    if ('moves' in init) {\n      this.moves = init.moves\n    } else if ('code' in init) {\n      this.moves = []\n      const codes = Array.from(init.code.matchAll(/[a-zA-Z][0-9]+/g)).map(m => m[0])\n      for (let i = 0; i < codes.length; i++) {\n        const p = point(codes[i])\n        if (p === undefined) throw new Error(`invalid code: ${codes[i]}`)\n        this.moves.push(p)\n      }\n    } else {\n      this.moves = []\n    }\n  }\n\n  move (p: Point): Game | undefined {\n    if (!this.movable(p)) return undefined\n    return new Game({\n      moves: [...this.moves, p],\n    })\n  }\n\n  undo (): Game | undefined {\n    if (this.moves.length === 0) return undefined\n    return new Game({\n      moves: this.moves.slice(0, this.moves.length - 1),\n    })\n  }\n\n  movable (p: Point): boolean {\n    return this.moves.findIndex(q => equal(p, q)) < 0\n  }\n\n  fork (i: number): Game {\n    return new Game({ moves: this.moves.slice(0, i) })\n  }\n\n  get code (): string {\n    return this.moves.map(code).join('')\n  }\n\n  get blacks (): Point[] {\n    return this.moves.filter((_, i) => i % 2 === 0)\n  }\n\n  get whites (): Point[] {\n    return this.moves.filter((_, i) => i % 2 !== 0)\n  }\n\n  get isBlackTurn (): boolean {\n    return this.moves.length % 2 === 0\n  }\n\n  get isFirstTurn (): boolean {\n    return this.isBlackTurn\n  }\n}\n","import { createContext, useState } from 'react'\nimport { Board, Game, N_LINES, Point } from '../rule'\n\nexport class AppState {\n  readonly game: Game\n  readonly cursor: number\n  readonly board: Board\n\n  constructor (init: {} | {code: string} | Pick<AppState, 'game' | 'cursor' | 'board'>) {\n    if ('game' in init) {\n      this.game = init.game\n      this.cursor = init.cursor\n      this.board = init.board\n    } else if ('code' in init) {\n      const codes = init.code.split('/')\n      if (codes.length !== 2) throw new Error('invalid code')\n      const [gameCode, cursorCode] = codes\n      this.game = new Game({ code: gameCode })\n      this.cursor = parseInt(cursorCode)\n      const current = this.game.fork(this.cursor)\n      this.board = new Board({ size: N_LINES, blacks: current.blacks, whites: current.whites })\n    } else {\n      this.game = new Game({})\n      this.cursor = 0\n      this.board = new Board({ size: N_LINES })\n    }\n  }\n\n  move (p: Point): AppState {\n    if (!this.canMove) return this\n    if (this.game.isBlackTurn && this.board.forbidden(p)) return this\n\n    const game = this.game.move(p)\n    if (game === undefined) return this\n    return new AppState({\n      game: game,\n      board: this.board.put(this.game.isBlackTurn, p),\n      cursor: this.cursor + 1,\n    })\n  }\n\n  undo (): AppState {\n    if (!this.canUndo) return this\n\n    const game = this.game.undo()\n    if (game === undefined) return this\n    return new AppState({\n      game: game,\n      board: this.board.remove(this.game.moves[this.game.moves.length - 1]),\n      cursor: this.cursor - 1,\n    })\n  }\n\n  reset (): AppState {\n    if (!this.canReset) return this\n    return new AppState({})\n  }\n\n  forward (): AppState {\n    if (this.isLast) return this\n    return new AppState({\n      game: this.game,\n      board: this.board.put(this.cursor % 2 === 0, this.game.moves[this.cursor]),\n      cursor: this.cursor + 1,\n    })\n  }\n\n  backward (): AppState {\n    if (this.isStart) return this\n    return new AppState({\n      game: this.game,\n      board: this.board.remove(this.game.moves[this.cursor - 1]),\n      cursor: this.cursor - 1,\n    })\n  }\n\n  jump (i: number): AppState {\n    if (i < 0 || this.game.moves.length < i) return this\n    const forked = this.game.fork(i)\n    return new AppState({\n      game: this.game,\n      board: new Board({\n        size: this.board.size,\n        blacks: forked.blacks,\n        whites: forked.whites,\n      }),\n      cursor: i,\n    })\n  }\n\n  toStart (): AppState {\n    return this.jump(0)\n  }\n\n  toLast (): AppState {\n    return this.jump(this.game.moves.length)\n  }\n\n  get isStart (): boolean {\n    return this.cursor === 0\n  }\n\n  get isLast (): boolean {\n    return this.cursor === this.game.moves.length\n  }\n\n  get canMove (): boolean {\n    return this.isLast\n  }\n\n  get canUndo (): boolean {\n    return this.isLast && !this.isStart\n  }\n\n  get canReset (): boolean {\n    return this.game.moves.length > 0\n  }\n\n  get moves (): Point[] {\n    return this.game.moves.slice(0, this.cursor)\n  }\n\n  get code (): string {\n    return `${this.game.code}/${this.cursor}`\n  }\n}\n\nexport type SetAppState = (s: AppState) => void\n\nexport const useAppState = (): [AppState, SetAppState] => {\n  const init = parseAppState(window.location.hash) || new AppState({})\n  const [appState, setAppState] = useState<AppState>(init)\n\n  const setAppStateAndHash = (s: AppState) => {\n    setAppState(s)\n    window.history.replaceState(null, '', `#${s.code}`)\n  }\n  return [appState, setAppStateAndHash]\n}\n\nexport const AppStateContext = createContext<[AppState, SetAppState]>([new AppState({}), () => {}])\n\nconst parseAppState = (windowLocationHash: string): AppState | undefined => {\n  try {\n    return new AppState({ code: windowLocationHash.slice(1) })\n  } catch (e) {\n    console.log(`Invalid fragment: '${windowLocationHash}'`)\n  }\n}\n","import { createContext, useState } from 'react'\n\nexport class Preference {\n  readonly showIndices: boolean = false\n  readonly showOrders: boolean = false\n  readonly emphasizeLastMove: boolean = false\n  readonly showForbiddens: boolean = false\n  readonly showPropertyRows: boolean = false\n  readonly showPropertyEyes: boolean = false\n\n  constructor (init: Partial<Preference>) {\n    if (init.showIndices !== undefined) this.showIndices = init.showIndices\n    if (init.showOrders !== undefined) this.showOrders = init.showOrders\n    if (init.emphasizeLastMove !== undefined) this.emphasizeLastMove = init.emphasizeLastMove\n    if (init.showForbiddens !== undefined) this.showForbiddens = init.showForbiddens\n    if (init.showPropertyRows !== undefined) this.showPropertyRows = init.showPropertyRows\n    if (init.showPropertyEyes !== undefined) this.showPropertyEyes = init.showPropertyEyes\n  }\n}\n\nexport type SetPreference = (p: Preference) => void\n\nexport const usePreference = (): [Preference, SetPreference] => {\n  const init = loadPreference(localStorage.getItem('preference') || '{}') || new Preference({})\n  const [preference, setPreference] = useState<Preference>(init)\n  const setAndSavePreference = (p: Preference) => {\n    setPreference(p)\n    localStorage.setItem('preference', JSON.stringify(p))\n  }\n  return [preference, setAndSavePreference]\n}\n\nexport const PreferenceContext = createContext<[Preference, SetPreference]>([new Preference({}), () => {}])\n\nconst loadPreference = (localStoragePreference: string): Preference | undefined => {\n  try {\n    const partial = JSON.parse(localStoragePreference) as Partial<Preference>\n    return new Preference(partial)\n  } catch (e) {\n    console.log(`Invalid preference: '${localStoragePreference}'`)\n  }\n}\n","import { ButtonProps } from '@chakra-ui/core'\nimport { createContext } from 'react'\nimport { code, N_LINES, Point, xCode, yCode } from '../rule'\n\nexport type BoardWidth = 640 | 360 | 320\n\nexport type BoardCoordinate = [number, number]\n\nexport class System {\n  readonly N: number = N_LINES\n  readonly W: BoardWidth\n  readonly C: number // cell size\n  readonly P: number // padding\n\n  constructor (windowInnerWidth: number) {\n    if (windowInnerWidth >= 640) {\n      this.W = 640\n      this.C = 40\n      this.P = 40\n    } else if (windowInnerWidth >= 360) {\n      this.W = 360\n      this.C = 24\n      this.P = 12\n    } else {\n      this.W = 320\n      this.C = 20\n      this.P = 20\n    }\n  }\n\n  cx (x: number): number {\n    return this.P + (x - 1) * this.C\n  }\n\n  cy (y: number): number {\n    return this.P + (this.N - y) * this.C\n  }\n\n  c ([x, y]: Point): BoardCoordinate {\n    return [this.cx(x), this.cy(y)]\n  }\n\n  p ([bx, by]: [number, number]): Point {\n    return [\n      adjust((bx - this.P) / this.C + 1),\n      adjust((this.W - by - this.P) / this.C + 1),\n    ]\n  }\n\n  xCode (x: number): string {\n    return xCode(x)\n  }\n\n  yCode (y: number): string {\n    return yCode(y)\n  }\n\n  code ([x, y]: Point): string {\n    return code([x, y])\n  }\n\n  get indices (): number[] {\n    return new Array(this.N).fill(null).map((_, i) => i + 1)\n  }\n\n  get buttonSize (): ButtonProps['size'] {\n    switch (this.W) {\n      case 320:\n        return 'sm'\n      case 360:\n        return 'sm'\n      case 640:\n        return 'lg'\n    }\n  }\n\n  get rulerStrokeWidth (): number {\n    switch (this.W) {\n      case 320:\n        return 1\n      case 360:\n        return 1\n      case 640:\n        return 2\n    }\n  }\n\n  get stoneStrokeWidth (): number {\n    switch (this.W) {\n      case 320:\n        return 1.5\n      case 360:\n        return 2\n      case 640:\n        return 2\n    }\n  }\n\n  get indexFontSize (): string {\n    switch (this.W) {\n      case 320:\n        return '8px'\n      case 360:\n        return '8px'\n      case 640:\n        return '16px'\n    }\n  }\n\n  get indexPadding (): number {\n    switch (this.W) {\n      case 320:\n        return 1\n      case 360:\n        return 1\n      case 640:\n        return 2\n    }\n  }\n\n  get orderFontSize (): string {\n    switch (this.W) {\n      case 320:\n        return '12px'\n      case 360:\n        return '12px'\n      case 640:\n        return '16px'\n    }\n  }\n\n  get forbiddenStrokeWidth (): number {\n    switch (this.W) {\n      case 320:\n        return 4\n      case 360:\n        return 4\n      case 640:\n        return 5\n    }\n  }\n\n  get propertyRowStrokeWidth (): number {\n    switch (this.W) {\n      case 320:\n        return 3\n      case 360:\n        return 3\n      case 640:\n        return 4\n    }\n  }\n\n  get propertyRowStrokeDasharray (): string {\n    switch (this.W) {\n      case 320:\n        return '1 4'\n      case 360:\n        return '1 4'\n      case 640:\n        return '3 5'\n    }\n  }\n}\n\nconst adjust = (n: number): number => Math.min(Math.max(1, Math.round(n)), N_LINES)\n\nexport const SystemContext = createContext<System>(new System(640))\n\nexport const setupSystem = (): System => new System(window.innerWidth)\n","import React, { FC, useContext } from 'react'\nimport { SystemContext } from '../system'\n\ntype DefaultProps = {\n  showIndices: boolean\n}\n\nconst Default: FC<DefaultProps> = ({\n  showIndices,\n}) => {\n  return <g>\n    <Rulers />\n    <Stars />\n    {showIndices && <Indices />}\n  </g>\n}\n\nconst Rulers: FC = () => {\n  const system = useContext(SystemContext)\n  const verticalLines = system.indices.map(\n    (x, key) => <line\n      key={key}\n      x1={system.cx(x)} y1={system.cy(1)} x2={system.cx(x)} y2={system.cy(system.N)}\n      stroke=\"darkgray\"\n      strokeWidth={system.rulerStrokeWidth}\n    />\n  )\n  const horizontalLines = system.indices.map(\n    (y, key) => <line\n      key={key}\n      x1={system.cx(1)} y1={system.cy(y)} x2={system.cx(system.N)} y2={system.cy(y)}\n      stroke=\"darkgray\"\n      strokeWidth={system.rulerStrokeWidth}\n    />\n  )\n  return <g>\n    {verticalLines}\n    {horizontalLines}\n  </g>\n}\n\nconst Stars: FC = () => {\n  const system = useContext(SystemContext)\n  const points = [[4, 4], [4, 12], [8, 8], [12, 4], [12, 12]]\n  return <g>\n    {\n      points.map(\n        ([x, y], key) => <circle\n          key={key}\n          cx={system.cx(x)} cy={system.cy(y)} r={system.C / 10}\n          stroke=\"none\"\n          fill=\"gray\"\n        />\n      )\n    }\n  </g>\n}\n\nconst Indices: FC = () => {\n  const system = useContext(SystemContext)\n  const xIndices = system.indices.map(\n    (x, key) => <text\n      key={key}\n      x={system.cx(x)} y={system.cy(1) + system.P - system.indexPadding}\n      textAnchor=\"middle\"\n      fill=\"gray\"\n      fontSize={system.indexFontSize}\n      fontFamily=\"Noto Sans\"\n    >\n      {system.xCode(x)}\n    </text>\n  )\n  const yIndices = system.indices.map(\n    (y, key) => <text\n      key={key}\n      x={system.P * 3 / 10 + system.indexPadding} y={system.cy(y)}\n      textAnchor=\"middle\"\n      dominantBaseline=\"central\"\n      fill=\"gray\"\n      fontSize={system.indexFontSize}\n      fontFamily=\"Noto Sans\"\n    >\n      {system.yCode(y)}\n    </text>\n  )\n  return <g>\n    { xIndices }\n    { yIndices }\n  </g>\n}\n\nexport default Default\n","import React, { FC, useContext } from 'react'\nimport { Board, Point, Property } from '../../rule'\nimport { SystemContext } from '../system'\n\ntype DefaultProps = {\n  board: Board\n  showForbiddens: boolean\n  showPropertyRows: boolean\n  showPropertyEyes: boolean\n}\n\nconst Default: FC<DefaultProps> = ({\n  board,\n  showForbiddens,\n  showPropertyRows,\n  showPropertyEyes,\n}) => {\n  return <g>\n    {\n      showPropertyRows &&\n      <>\n        <PropertyRows\n          black={true}\n          properties={board.properties.get(true, 'two')}\n        />\n        <PropertyRows\n          black={true}\n          properties={board.properties.get(true, 'closedThree')}\n        />\n        <PropertyRows\n          black={false} properties={board.properties.get(false, 'two')}\n        />\n        <PropertyRows\n          black={false}\n          properties={board.properties.get(false, 'closedThree')}\n        />\n        <PropertyRows\n          black={true}\n          properties={board.properties.get(true, 'three')}\n        />\n        <PropertyRows\n          black={true}\n          properties={board.properties.get(true, 'four')}\n        />\n        <PropertyRows\n          black={false} properties={board.properties.get(false, 'three')}\n        />\n        <PropertyRows\n          black={false} properties={board.properties.get(false, 'four')}\n        />\n      </>\n    }\n    {\n      showPropertyEyes &&\n      <>\n        <PropertyEyes\n          black={true}\n          properties={board.properties.get(true, 'three')}\n        />\n        <PropertyEyes\n          black={true}\n          properties={board.properties.get(true, 'four')}\n          emphasized\n        />\n        <PropertyEyes\n          black={false}\n          properties={board.properties.get(false, 'three')}\n        />\n        <PropertyEyes\n          black={false}\n          properties={board.properties.get(false, 'four')}\n          emphasized\n        />\n      </>\n    }\n    {\n      showForbiddens &&\n      <Forbiddens\n        points={board.forbiddens}\n      />\n    }\n  </g>\n}\n\ntype ForbiddensProps = {\n  points: Point[]\n}\n\nconst Forbiddens: FC<ForbiddensProps> = ({\n  points,\n}) => {\n  const system = useContext(SystemContext)\n  const crosses = points.map(\n    (p, key) => {\n      const [cx, cy] = system.c(p)\n      const r = system.C * 2 / 10\n      const [x1, x2, y1, y2] = [cx - r, cx + r, cy + r, cy - r]\n      return <g key={key} >\n        <line\n          x1={x1} y1={y1} x2={x2} y2={y2}\n          stroke=\"red\"\n          strokeWidth={system.forbiddenStrokeWidth}\n          opacity=\"0.5\"\n        />\n        <line\n          x1={x1} y1={y2} x2={x2} y2={y1}\n          stroke=\"red\"\n          strokeWidth={system.forbiddenStrokeWidth}\n          opacity=\"0.5\"\n        />\n      </g>\n    }\n  )\n  return <g>\n    { crosses }\n  </g>\n}\n\ntype PropertiesProps = {\n  black: boolean\n  properties: Property[]\n  emphasized?: boolean | undefined\n}\n\nconst PropertyRows: FC<PropertiesProps> = ({\n  black,\n  properties,\n}) => {\n  const system = useContext(SystemContext)\n  const lines = properties.map(\n    (prop, key) => {\n      const [x1, y1] = system.c(prop.start)\n      const [x2, y2] = system.c(prop.end)\n      return <g key={key}>\n        { (x1 === x2 || y1 === y2) &&\n          <line\n            x1={x1} y1={y1} x2={x2} y2={y2}\n            stroke=\"white\"\n            strokeWidth={system.propertyRowStrokeWidth}\n            strokeLinecap=\"butt\"\n            opacity=\"0.6\"\n          />\n        }\n        <line\n          x1={x1} y1={y1} x2={x2} y2={y2}\n          stroke={black ? 'blue' : 'darkgreen'}\n          strokeWidth={system.propertyRowStrokeWidth}\n          strokeLinecap=\"round\"\n          strokeDasharray={system.propertyRowStrokeDasharray}\n          opacity=\"0.4\"\n        />\n      </g>\n    }\n  )\n  return <g>\n    { lines }\n  </g>\n}\n\nconst PropertyEyes: FC<PropertiesProps> = ({\n  black,\n  properties,\n  emphasized,\n}) => {\n  const system = useContext(SystemContext)\n  const gs = properties.map(\n    (prop, m) => {\n      const rects = prop.eyes.map(\n        (e, n) => {\n          const [cx, cy] = system.c(e)\n          const r = system.C * 2 / 10\n          return (\n            emphasized\n              ? <Diamond\n                key={n}\n                cx={cx} cy={cy} r={r}\n                fill={black ? 'blue' : 'darkgreen'}\n              />\n              : <circle\n                key={n}\n                cx={cx} cy={cy} r={r}\n                stroke=\"none\"\n                fillOpacity=\"0.4\"\n                fill={black ? 'blue' : 'darkgreen'}\n              />\n          )\n        }\n      )\n      return <g key={m}>\n        { rects }\n      </g>\n    }\n  )\n  return <g>\n    { gs }\n  </g>\n}\n\nconst Diamond: FC<{fill: string; cx: number, cy: number, r: number}> = ({\n  fill,\n  cx,\n  cy,\n  r,\n}) => <g transform={`rotate(45, ${cx}, ${cy})`}>\n  <rect\n    x={cx - r} y={cy - r}\n    width={r * 2} height={r * 2}\n    fill={fill}\n    stroke=\"none\"\n    fillOpacity=\"0.7\"\n  />\n</g>\n\nexport default Default\n","import React, { FC, useContext } from 'react'\nimport { Point } from '../../rule'\nimport { SystemContext } from '../system'\n\ntype DefaultProps = {\n  moves?: Point[] | undefined\n  stones?: {\n    blacks: Point[]\n    whites: Point[]\n  } | undefined\n  showOrders?: boolean | undefined\n  emphasizeLastMove?: boolean | undefined\n}\n\nconst Default: FC<DefaultProps> = ({\n  moves,\n  stones,\n  showOrders,\n  emphasizeLastMove,\n}) => {\n  if (moves === undefined && stones === undefined) throw new Error('moves or stones required')\n  if (moves === undefined && showOrders) throw new Error('moves required to show orders')\n  if (moves === undefined && emphasizeLastMove) throw new Error('moves required to emphasize last')\n  const blacks = stones ? stones.blacks : moves!.filter((_, i) => i % 2 === 0)\n  const whites = stones ? stones.whites : moves!.filter((_, i) => i % 2 === 1)\n  return <g>\n    {\n      emphasizeLastMove && moves && moves.length >= 1 &&\n      <LastMarker\n        point={moves[moves.length - 1]}\n      />\n    }\n    <Stones\n      black={true}\n      points={blacks}\n    />\n    <Stones\n      black={false}\n      points={whites}\n    />\n    {\n      moves && showOrders &&\n      <Orders\n        moves={moves}\n      />\n    }\n  </g>\n}\n\ntype StonesProps = {\n  black: boolean\n  points: Point[]\n}\n\nconst Stones: FC<StonesProps> = ({\n  black,\n  points,\n}) => {\n  const stones = points.map(\n    (p, key) => <Stone key={key} black={black} point={p} />\n  )\n  return <g>\n    { stones }\n  </g>\n}\n\ntype OrdersProps = {\n  moves: Point[]\n}\n\nconst Orders: FC<OrdersProps> = ({\n  moves,\n}) => {\n  const system = useContext(SystemContext)\n  const texts = moves.map(\n    ([x, y], key) => {\n      const black = key % 2 === 0\n      return <text\n        key={key}\n        x={system.cx(x)} y={system.cy(y)}\n        fill={black ? 'whitesmoke' : 'dimgray'}\n        textAnchor=\"middle\"\n        dominantBaseline=\"central\"\n        fontSize={system.orderFontSize}\n        fontFamily=\"Noto Serif\"\n      >\n        {key + 1}\n      </text>\n    }\n  )\n  return <g>\n    { texts }\n  </g>\n}\n\ntype StoneProps = {\n  black: boolean\n  point: Point\n}\n\nconst Stone: FC<StoneProps> = ({\n  black,\n  point,\n}) => {\n  const system = useContext(SystemContext)\n  const [cx, cy] = system.c(point)\n  const r = system.C / 2 * 9 / 10\n  return <circle\n    cx={cx} cy={cy} r={r}\n    strokeWidth={system.stoneStrokeWidth}\n    stroke=\"#333333\"\n    strokeOpacity=\"0.7\"\n    fill={black ? '#333333' : 'white'}\n  />\n}\n\ntype LastMarkerProps = {\n  point: Point\n}\n\nconst LastMarker: FC<LastMarkerProps> = ({\n  point,\n}) => {\n  const system = useContext(SystemContext)\n  const [cx, cy] = system.c(point)\n  const r = system.C / 2 * 21 / 20\n  return <circle\n    cx={cx} cy={cy} r={r}\n    fill=\"violet\"\n  />\n}\n\nexport default Default\n","import React, { FC, useContext } from 'react'\nimport { Board, Point } from '../../rule'\nimport { PreferenceContext } from '../preference'\nimport { SystemContext } from '../system'\nimport Base from './Base'\nimport Properties from './Properties'\nimport Stones from './Stones'\n\ntype DefaultProps = {\n  id: string\n  board: Board\n  moves: Point[]\n  onClickPoint?: ([x, y]: Point) => void\n}\n\nconst Default: FC<DefaultProps> = ({\n  id,\n  board,\n  moves,\n  onClickPoint,\n}) => {\n  const system = useContext(SystemContext)\n  const preference = useContext(PreferenceContext)[0]\n\n  const onClick = onClickPoint && (\n    (e: React.MouseEvent<SVGElement, MouseEvent>) => {\n      const base = e.currentTarget.getBoundingClientRect()\n      const [bx, by] = [e.clientX - base.x, e.clientY - base.y]\n      onClickPoint(system.p([bx, by]))\n    }\n  )\n  return <svg id={id} className=\"rjn-board\" width={system.W} height={system.W} onClick={onClick}>\n    <Base\n      showIndices={preference.showIndices}\n    />\n    <Properties\n      board={board}\n      showForbiddens={preference.showForbiddens}\n      showPropertyRows={preference.showPropertyRows}\n      showPropertyEyes={preference.showPropertyEyes}\n    />\n    <Stones\n      moves={moves}\n      showOrders={preference.showOrders}\n      emphasizeLastMove={preference.emphasizeLastMove}\n    />\n  </svg>\n}\n\nexport default Default\n","import React, { FC, useContext } from 'react'\nimport { Point } from '../../rule'\nimport { AppStateContext } from '../appState'\nimport BoardComponent from '../BoardComponent'\n\nconst MAIN_BOARD_ID = 'main-board'\n\nconst Default: FC = () => {\n  const [appState, setAppState] = useContext(AppStateContext)\n  const onClickPoint = (p: Point) => setAppState(appState.move(p))\n  return <BoardComponent\n    id={MAIN_BOARD_ID}\n    onClickPoint={onClickPoint}\n    board={appState.board}\n    moves={appState.moves}\n  />\n}\n\nexport default Default\n","import {\n  Box, ButtonProps, IconButton\n} from '@chakra-ui/core'\nimport React, { FC, useContext } from 'react'\nimport { FiDownload } from 'react-icons/fi'\nimport { AppStateContext } from '../../appState'\nimport BoardComponent from '../../BoardComponent'\nimport { System, SystemContext } from '../../system'\n\ntype DefaultProps = {\n  buttonSize: ButtonProps['size']\n}\n\nconst SHARE_BOARD_ID = 'share-board'\n\nconst Default: FC<DefaultProps> = ({\n  buttonSize,\n}) => {\n  const appState = useContext(AppStateContext)[0]\n  return <>\n    <IconButton\n      icon={FiDownload} aria-label=\"share\"\n      onClick={downloadImage}\n      size={buttonSize}\n      variant=\"ghost\"\n    />\n    <Box hidden>\n      <SystemContext.Provider value={new System(640)}>\n        <BoardComponent\n          id={SHARE_BOARD_ID}\n          board={appState.board}\n          moves={appState.moves}\n        />\n      </SystemContext.Provider>\n    </Box>\n  </>\n}\n\nconst downloadImage = () => {\n  const svgElem = document.getElementById(SHARE_BOARD_ID)! as unknown as SVGSVGElement\n  const svgData = new XMLSerializer().serializeToString(svgElem)\n  const imageElem = new Image()\n  imageElem.src = 'data:image/svg+xml;charset=utf-8;base64,' + btoa(unescape(encodeURIComponent(svgData)))\n  const canvasElem = document.createElement('canvas')\n  canvasElem.width = svgElem.width.baseVal.value\n  canvasElem.height = svgElem.height.baseVal.value\n  const ctx = canvasElem.getContext('2d')!\n  ctx.fillStyle = 'white'\n  ctx.fillRect(0, 0, canvasElem.width, canvasElem.height)\n  imageElem.onload = () => {\n    ctx.drawImage(imageElem, 0, 0)\n    const a = document.createElement('a') as HTMLAnchorElement\n    a.href = canvasElem.toDataURL('image/png')\n    a.setAttribute('download', 'renju-note.png')\n    a.dispatchEvent(new MouseEvent('click'))\n  }\n}\n\nexport default Default\n","import {\n  ButtonProps, Flex, FormLabel, IconButton,\n  Popover, PopoverArrow, PopoverBody, PopoverContent, PopoverTrigger,\n  Switch\n} from '@chakra-ui/core'\nimport React, { FC, useContext } from 'react'\nimport { FiToggleRight } from 'react-icons/fi'\nimport { PreferenceContext } from '../../preference'\n\ntype DefaultProps = {\n  buttonSize: ButtonProps['size']\n}\n\nconst Default: FC<DefaultProps> = ({\n  buttonSize,\n}) => {\n  const [preference, setPreference] = useContext(PreferenceContext)\n  const isAllChecked = (\n    preference.showIndices &&\n    preference.showOrders &&\n    preference.emphasizeLastMove &&\n    preference.showForbiddens &&\n    preference.showPropertyRows &&\n    preference.showPropertyEyes\n  )\n  return (\n    <Popover\n      placement=\"bottom\"\n    >\n      <PopoverTrigger>\n        <IconButton\n          size={buttonSize}\n          icon={FiToggleRight} aria-label=\"preference\"\n          variant=\"ghost\"\n        />\n      </PopoverTrigger>\n      <PopoverContent\n        zIndex={4}\n      >\n        <PopoverArrow />\n        <PopoverBody fontFamily=\"Noto Sans\" fontWeight=\"normal\">\n          <Flex justify=\"space-between\" align=\"center\">\n            <FormLabel htmlFor=\"controller-preference-all\">All</FormLabel>\n            <Switch\n              id=\"controller-preference-all\"\n              isChecked={isAllChecked}\n              onChange={() => {\n                if (isAllChecked) {\n                  setPreference({\n                    showIndices: false,\n                    showOrders: false,\n                    emphasizeLastMove: false,\n                    showForbiddens: false,\n                    showPropertyRows: false,\n                    showPropertyEyes: false,\n                  })\n                } else {\n                  setPreference({\n                    showIndices: true,\n                    showOrders: true,\n                    emphasizeLastMove: true,\n                    showForbiddens: true,\n                    showPropertyRows: true,\n                    showPropertyEyes: true,\n                  })\n                }\n              }}\n            />\n          </Flex>\n          <Flex justify=\"space-between\" align=\"center\">\n            <FormLabel htmlFor=\"controller-preference-show-indices\">Line indices</FormLabel>\n            <Switch\n              id=\"controller-preference-show-indices\"\n              isChecked={preference.showIndices}\n              onChange={() => setPreference({ ...preference, showIndices: !preference.showIndices })}\n            />\n          </Flex>\n          <Flex justify=\"space-between\" align=\"center\">\n            <FormLabel htmlFor=\"controller-preference-show-orders\">Move orders</FormLabel>\n            <Switch\n              id=\"controller-preference-show-orders\"\n              isChecked={preference.showOrders}\n              onChange={() => setPreference({ ...preference, showOrders: !preference.showOrders })}\n            />\n          </Flex>\n          <Flex justify=\"space-between\" align=\"center\">\n            <FormLabel htmlFor=\"controller-preference-emphasize-last-move\">Last move</FormLabel>\n            <Switch\n              id=\"controller-preference-emphasize-last-move\"\n              isChecked={preference.emphasizeLastMove}\n              onChange={() => setPreference({ ...preference, emphasizeLastMove: !preference.emphasizeLastMove })}\n            />\n          </Flex>\n          <Flex justify=\"space-between\" align=\"center\">\n            <FormLabel htmlFor=\"controller-preference-show-forbiddens\">Forbiddens</FormLabel>\n            <Switch\n              id=\"controller-preference-show-forbiddens\"\n              isChecked={preference.showForbiddens}\n              onChange={() => setPreference({ ...preference, showForbiddens: !preference.showForbiddens })}\n            />\n          </Flex>\n          <Flex justify=\"space-between\" align=\"center\">\n            <FormLabel htmlFor=\"controller-preference-show-property-eyes\">Row eyes</FormLabel>\n            <Switch id=\"controller-preference-show-property-eyes\"\n              isChecked={preference.showPropertyEyes}\n              onChange={() => setPreference({ ...preference, showPropertyEyes: !preference.showPropertyEyes })}\n            />\n          </Flex>\n          <Flex justify=\"space-between\" align=\"center\">\n            <FormLabel htmlFor=\"controller-preference-show-property-rows\">Row lines</FormLabel>\n            <Switch\n              id=\"controller-preference-show-property-rows\"\n              isChecked={preference.showPropertyRows}\n              onChange={() => setPreference({ ...preference, showPropertyRows: !preference.showPropertyRows })}\n            />\n          </Flex>\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  )\n}\n\nexport default Default\n","import {\n  Button, ButtonProps, Flex, IconButton,\n  Popover, PopoverArrow, PopoverContent, PopoverTrigger\n} from '@chakra-ui/core'\nimport React, { FC, useContext } from 'react'\nimport {\n  FiChevronLeft, FiChevronRight, FiChevronsLeft, FiChevronsRight,\n  FiLoader, FiX\n} from 'react-icons/fi'\nimport { AppStateContext } from '../../appState'\nimport { SystemContext } from '../../system'\nimport DownloadButton from './DownloadButton'\nimport PreferencePopover from './PreferencePopover'\n\nconst Default: FC = () => {\n  const system = useContext(SystemContext)\n  const [appState, setAppState] = useContext(AppStateContext)\n  return <Flex width={system.W} justifyContent=\"space-around\" alignItems=\"center\">\n    <PreferencePopover\n      buttonSize={system.buttonSize}\n    />\n    <ResetPopover\n      buttonSize={system.buttonSize}\n    />\n    <Flex justifyContent=\"center\" alignItems=\"center\">\n      <IconButton\n        onClick={() => setAppState(appState.toStart())}\n        icon={FiChevronsLeft} aria-label=\"to start\"\n        size={system.buttonSize}\n        variant=\"ghost\"\n        isDisabled={appState.isStart}\n      />\n      <IconButton\n        onClick={() => setAppState(appState.backward())}\n        icon={FiChevronLeft} aria-label=\"backward\"\n        size={system.buttonSize}\n        variant=\"ghost\"\n        isDisabled={appState.isStart}\n      />\n      <Button\n        width={6} // do not resize according to text\n        size={system.buttonSize}\n        variant=\"ghost\" fontFamily=\"Noto Serif\" fontWeight=\"normal\"\n        isDisabled={true}\n      >\n        {appState.cursor}\n      </Button>\n      <IconButton\n        onClick={() => setAppState(appState.forward())}\n        icon={FiChevronRight} aria-label=\"forward\"\n        size={system.buttonSize}\n        variant=\"ghost\"\n        isDisabled={appState.isLast}\n      />\n      <IconButton\n        onClick={() => setAppState(appState.toLast())}\n        icon={FiChevronsRight} aria-label=\"to last\"\n        size={system.buttonSize}\n        variant=\"ghost\"\n        isDisabled={appState.isLast}\n      />\n    </Flex>\n    <IconButton\n      onClick={() => setAppState(appState.undo())}\n      icon={FiX} aria-label=\"undo\"\n      size={system.buttonSize}\n      variant=\"ghost\"\n      isDisabled={!appState.canUndo}\n    />\n    <DownloadButton\n      buttonSize={system.buttonSize}\n    />\n  </Flex>\n}\n\ntype ResetPopoverProps = {\n  buttonSize: ButtonProps['size']\n}\n\nconst ResetPopover: FC<ResetPopoverProps> = ({\n  buttonSize,\n}) => {\n  const [appState, setAppState] = useContext(AppStateContext)\n  return (\n    <Popover\n      placement=\"bottom\"\n    >\n      {\n        ({ onClose }) => (\n          <>\n            <PopoverTrigger>\n              <IconButton\n                icon={FiLoader} aria-label=\"reset\"\n                size={buttonSize}\n                variant=\"ghost\"\n                isDisabled={!appState.canReset}\n              />\n            </PopoverTrigger>\n            <PopoverContent\n              zIndex={4}\n              width={16}\n            >\n              <PopoverArrow />\n              <Button\n                as=\"button\"\n                size=\"sm\"\n                variant=\"ghost\"\n                variantColor=\"red\"\n                fontFamily=\"Noto Sans\" fontWeight=\"normal\"\n                onClick={() => {\n                  setAppState(appState.reset())\n                  if (onClose) onClose()\n                }}\n              >\n                RESET\n              </Button>\n            </PopoverContent>\n          </>\n        )\n      }\n    </Popover>\n  )\n}\n\nexport default Default\n","import { Flex, Stack, Text } from '@chakra-ui/core'\nimport React, { FC } from 'react'\nimport Board from './Board'\nimport Controller from './Controller'\n\nconst Default: FC = () => {\n  return <Flex justify=\"center\">\n    <Stack spacing={4} my={2}>\n      <Flex justify=\"center\" align=\"center\">\n        <Text\n          as=\"h1\" textAlign=\"center\"\n          fontFamily=\"Noto Sans\" fontWeight=\"normal\" color=\"gray.500\"\n        >\n            Renju Note BETA\n        </Text>\n      </Flex>\n      <Flex justify=\"center\" align=\"center\">\n        <Board />\n      </Flex>\n      <Flex justify=\"center\" align=\"center\">\n        <Controller />\n      </Flex>\n    </Stack>\n  </Flex>\n}\n\nexport default Default\n","import { CSSReset, ThemeProvider } from '@chakra-ui/core'\nimport React, { FC, useEffect } from 'react'\nimport './App.css'\nimport { AppStateContext, useAppState } from './appState'\nimport Main from './Main'\nimport { PreferenceContext, usePreference } from './preference'\nimport { setupSystem, SystemContext } from './system'\n\nconst App: FC = () => {\n  const system = setupSystem()\n\n  const [appState, setAppState] = useAppState()\n  useEffect(\n    () => setAppState(appState),\n    [appState]\n  )\n\n  const [preference, setPreference] = usePreference()\n  useEffect(\n    () => setPreference(preference),\n    [preference],\n  )\n  return <ThemeProvider>\n    <CSSReset />\n    <SystemContext.Provider value={system}>\n      <AppStateContext.Provider value={[appState, setAppState]}>\n        <PreferenceContext.Provider value={[preference, setPreference]}>\n          <Main />\n        </PreferenceContext.Provider>\n      </AppStateContext.Provider>\n    </SystemContext.Provider>\n  </ThemeProvider>\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register (config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}