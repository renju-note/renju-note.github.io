{"version":3,"sources":["rule/foundation.ts","rule/board/row.ts","rule/board/line.ts","rule/board/square.ts","rule/board/forbidden.ts","rule/board/board.ts","rule/game/game.ts","state/state.ts","components/code.ts","components/Board/coordinate.ts","components/Board/Base.tsx","components/Board/Stones.tsx","components/Board/Properties.tsx","components/Board/index.tsx","components/Controller/PreferencePopover.tsx","components/Controller/index.tsx","components/Main.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["equal","a","b","BLACK_PATTERNS","two","row","kind","size","eyes","rowStart","blacks","whites","blmask","whmask","closedThree","three","four","five","overline","WHITE_PATTERNS","Line","init","rows","this","Error","RowsProxy","black","i","overlay","is","stones","n","length","mask","result","pat","blackCache","whiteCache","undefined","cache","compute","patterns","blacks_","appendDummies","whites_","size_","flatMap","p","within","pattern","filter","push","search","map","start","e","Square","facets","newOrthogonalLines","newDiagonalLines","bsize","direction","lines","toIndex","j","newLine","put","slice","ps","m","Map","has","get","set","l","putMulti","remove","find","d","reverse","toSting","join","x","y","toPoint","Array","fill","_","lrow","end","forbidden","square","point","doubleFour","doubleThree","r","between","newFours","distinct","next","newThrees","trueThrees","t","s","srows","srow","findIndex","adjacent","xd","yd","Math","abs","Board","properties","forbiddensCache","PropertiesProxy","hasStone","bi","q","wi","toString","computeForbiddens","Game","moves","movable","isBlackTurn","State","game","cursor","board","canMove","move","canUndo","undo","canReset","isLast","isStart","forked","fork","jump","xCode","charAt","yCode","N","INDICES","cx","C","cy","Rulers","verticalLines","key","x1","y1","x2","y2","stroke","strokeWidth","horizontalLines","Stars","points","Indices","fontSize","xIndices","textAnchor","fontFamily","yIndices","dominantBaseline","Default","showIndices","Stones","circles","Orders","texts","Stone","strokeOpacity","LastMarker","showOrders","emphasizeLastMove","Forbiddens","crosses","opacity","PropertyRows","prop","p1x","p1y","p2x","p2y","strokeLinecap","strokeDasharray","PropertyEyes","emphasize","gs","rects","fillOpacity","Diamond","transform","width","height","showForbiddens","showPropertyRows","showPropertyEyes","forbiddens","adjust","min","max","round","state","setState","preference","W","onClick","base","currentTarget","getBoundingClientRect","bx","clientX","by","clientY","Base","Properties","setPreference","isAllChecked","Popover","placement","IconButton","icon","FiToggleRight","aria-label","variant","zIndex","fontWeight","Flex","justify","align","FormLabel","htmlFor","Switch","id","isChecked","onChange","ResetPopover","onClose","FiLoader","isDisabled","Button","as","variantColor","reset","justifyContent","alignItems","PreferencePopover","toStart","FiChevronsLeft","backward","FiChevronLeft","forward","FiChevronRight","toLast","FiChevronsRight","FiX","FiShare","useState","Stack","spacing","my","Text","textAlign","color","Controller","App","window","innerWidth","ThemeProvider","CSSReset","Main","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5cd0e3f0.chunk.js","sourcesContent":["export const N_LINES = 15\n\nexport type Point = [number, number]\n\nexport const equal = (a: Point, b: Point): boolean => a[0] === b[0] && a[1] === b[1]\n","export type Stones = number // stones as bits, e.g. 0b00111010\n\nexport const rowKinds = ['two', 'closedThree', 'three', 'four', 'five', 'overline'] as const\nexport type RowKind = typeof rowKinds[number]\n\nexport type Row = {\n  readonly kind: RowKind\n  readonly size: number\n  readonly eyes: number[] // index on which the row will promote if a stone is put\n}\n\nexport type RowPattern = {\n  readonly row: Row\n  readonly size: number\n  readonly rowStart: number\n  readonly blacks: Stones\n  readonly blmask: Stones\n  readonly whites: Stones\n  readonly whmask: Stones\n}\n\nexport const search = (blacks: Stones, whites: Stones, within: number, pattern: RowPattern): number[] => {\n  if (within < pattern.size) return []\n  const filter: Stones = 2 ** pattern.size - 1 // e.g. 6 -> 0b111111\n\n  const result: number[] = []\n  for (let i = 0; i <= within - pattern.size; i++) {\n    if (\n      (blacks & filter & ~pattern.blmask) === pattern.blacks &&\n      (whites & filter & ~pattern.whmask) === pattern.whites\n    ) {\n      result.push(i + pattern.rowStart)\n    }\n    blacks >>>= 1\n    whites >>>= 1\n  }\n  return result\n}\n\nconst BLACK_TWO_PATTERNS: RowPattern[] = [\n  {\n    row: { kind: 'two', size: 4, eyes: [2, 3] },\n    size: 8,\n    rowStart: 2,\n    blacks: 0b00001100,\n    whites: 0b00000000,\n    blmask: 0b00000000,\n    whmask: 0b10000001,\n  },\n  {\n    row: { kind: 'two', size: 4, eyes: [1, 3] },\n    size: 8,\n    rowStart: 2,\n    blacks: 0b00010100,\n    whites: 0b00000000,\n    blmask: 0b00000000,\n    whmask: 0b10000001,\n  },\n  {\n    row: { kind: 'two', size: 4, eyes: [0, 3] },\n    size: 8,\n    rowStart: 2,\n    blacks: 0b00011000,\n    whites: 0b00000000,\n    blmask: 0b00000000,\n    whmask: 0b10000001,\n  },\n  {\n    row: { kind: 'two', size: 4, eyes: [1, 2] },\n    size: 8,\n    rowStart: 2,\n    blacks: 0b00100100,\n    whites: 0b00000000,\n    blmask: 0b00000000,\n    whmask: 0b10000001,\n  },\n  {\n    row: { kind: 'two', size: 4, eyes: [0, 2] },\n    size: 8,\n    rowStart: 2,\n    blacks: 0b00101000,\n    whites: 0b00000000,\n    blmask: 0b00000000,\n    whmask: 0b10000001,\n  },\n  {\n    row: { kind: 'two', size: 4, eyes: [0, 1] },\n    size: 8,\n    rowStart: 2,\n    blacks: 0b00110000,\n    whites: 0b00000000,\n    blmask: 0b00000000,\n    whmask: 0b10000001,\n  },\n]\n\nconst BLACK_CLOSED_THREE_PATTERNS: RowPattern[] = [\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [2, 3] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0100110,\n    whites: 0b0000000,\n    blmask: 0b0000000,\n    whmask: 0b1000001,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [1, 3] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0101010,\n    whites: 0b0000000,\n    blmask: 0b0000000,\n    whmask: 0b1000001,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [1, 2] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0110010,\n    whites: 0b0000000,\n    blmask: 0b0000000,\n    whmask: 0b1000001,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [3, 4] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0001110,\n    whites: 0b0000001,\n    blmask: 0b0000000,\n    whmask: 0b1000000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [3, 5] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0010110,\n    whites: 0b0000001,\n    blmask: 0b0000000,\n    whmask: 0b1000000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [2, 5] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0011010,\n    whites: 0b0000001,\n    blmask: 0b0000000,\n    whmask: 0b1000000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [0, 3] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0101100,\n    whites: 0b1000000,\n    blmask: 0b0000000,\n    whmask: 0b0000001,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [0, 2] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0110100,\n    whites: 0b1000000,\n    blmask: 0b0000000,\n    whmask: 0b0000001,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [0, 1] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0111000,\n    whites: 0b1000000,\n    blmask: 0b0000000,\n    whmask: 0b0000001,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [1, 5] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0011100,\n    whites: 0b1000001,\n    blmask: 0b0000000,\n    whmask: 0b0000000,\n  },\n]\n\nconst BLACK_THREE_PATTERNS: RowPattern[] = [\n  {\n    row: { kind: 'three', size: 6, eyes: [4] },\n    size: 8,\n    rowStart: 1,\n    blacks: 0b00011100,\n    whites: 0b00000000,\n    blmask: 0b00000000,\n    whmask: 0b10000001,\n  },\n  {\n    row: { kind: 'three', size: 6, eyes: [3] },\n    size: 8,\n    rowStart: 1,\n    blacks: 0b00101100,\n    whites: 0b00000000,\n    blmask: 0b00000000,\n    whmask: 0b10000001,\n  },\n  {\n    row: { kind: 'three', size: 6, eyes: [2] },\n    size: 8,\n    rowStart: 1,\n    blacks: 0b00110100,\n    whites: 0b00000000,\n    blmask: 0b00000000,\n    whmask: 0b10000001,\n  },\n  {\n    row: { kind: 'three', size: 6, eyes: [1] },\n    size: 8,\n    rowStart: 1,\n    blacks: 0b00111000,\n    whites: 0b00000000,\n    blmask: 0b00000000,\n    whmask: 0b10000001,\n  },\n]\n\nconst BLACK_FOUR_PATTERNS: RowPattern[] = [\n  {\n    row: { kind: 'four', size: 5, eyes: [4] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0011110,\n    whites: 0b0000000,\n    blmask: 0b0000000,\n    whmask: 0b1000001,\n  },\n  {\n    row: { kind: 'four', size: 5, eyes: [3] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0101110,\n    whites: 0b0000000,\n    blmask: 0b0000000,\n    whmask: 0b1000001,\n  },\n  {\n    row: { kind: 'four', size: 5, eyes: [2] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0110110,\n    whites: 0b0000000,\n    blmask: 0b0000000,\n    whmask: 0b1000001,\n  },\n  {\n    row: { kind: 'four', size: 5, eyes: [1] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0111010,\n    whites: 0b0000000,\n    blmask: 0b0000000,\n    whmask: 0b1000001,\n  },\n  {\n    row: { kind: 'four', size: 5, eyes: [0] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0111100,\n    whites: 0b0000000,\n    blmask: 0b0000000,\n    whmask: 0b1000001,\n  },\n]\n\nconst BLACK_FIVE_PATTERNS: RowPattern[] = [\n  {\n    row: { kind: 'five', size: 5, eyes: [] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b0111110,\n    whites: 0b0000000,\n    blmask: 0b0000000,\n    whmask: 0b1000001,\n  },\n]\n\nconst BLACK_OVERLINE_PATTERNS: RowPattern[] = [\n  {\n    row: { kind: 'overline', size: 6, eyes: [] },\n    size: 6,\n    rowStart: 0,\n    blacks: 0b111111,\n    whites: 0b000000,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n]\n\nconst WHITE_TWO_PATTERNS: RowPattern[] = [\n  {\n    row: { kind: 'two', size: 4, eyes: [2, 3] },\n    size: 6,\n    rowStart: 1,\n    blacks: 0b000000,\n    whites: 0b000110,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'two', size: 4, eyes: [1, 3] },\n    size: 6,\n    rowStart: 1,\n    blacks: 0b000000,\n    whites: 0b001010,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'two', size: 4, eyes: [0, 3] },\n    size: 6,\n    rowStart: 1,\n    blacks: 0b000000,\n    whites: 0b001100,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'two', size: 4, eyes: [1, 2] },\n    size: 6,\n    rowStart: 1,\n    blacks: 0b000000,\n    whites: 0b010010,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'two', size: 4, eyes: [0, 2] },\n    size: 6,\n    rowStart: 1,\n    blacks: 0b000000,\n    whites: 0b010100,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'two', size: 4, eyes: [0, 1] },\n    size: 6,\n    rowStart: 1,\n    blacks: 0b000000,\n    whites: 0b011000,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n]\n\nconst WHITE_CLOSED_THREE_PATTERNS: RowPattern[] = [\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [2, 3] },\n    size: 5,\n    rowStart: 0,\n    blacks: 0b00000,\n    whites: 0b10011,\n    blmask: 0b00000,\n    whmask: 0b00000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [1, 3] },\n    size: 5,\n    rowStart: 0,\n    blacks: 0b00000,\n    whites: 0b10101,\n    blmask: 0b00000,\n    whmask: 0b00000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [1, 2] },\n    size: 5,\n    rowStart: 0,\n    blacks: 0b00000,\n    whites: 0b11001,\n    blmask: 0b00000,\n    whmask: 0b00000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [3, 4] },\n    size: 6,\n    rowStart: 1,\n    blacks: 0b000001,\n    whites: 0b001110,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [3, 5] },\n    size: 6,\n    rowStart: 1,\n    blacks: 0b000001,\n    whites: 0b010110,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [2, 5] },\n    size: 6,\n    rowStart: 1,\n    blacks: 0b000001,\n    whites: 0b011010,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [0, 3] },\n    size: 6,\n    rowStart: 0,\n    blacks: 0b100000,\n    whites: 0b010110,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [0, 2] },\n    size: 6,\n    rowStart: 0,\n    blacks: 0b100000,\n    whites: 0b011010,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [0, 1] },\n    size: 6,\n    rowStart: 0,\n    blacks: 0b100000,\n    whites: 0b011100,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'closedThree', size: 5, eyes: [1, 5] },\n    size: 7,\n    rowStart: 1,\n    blacks: 0b1000001,\n    whites: 0b0011100,\n    blmask: 0b0000000,\n    whmask: 0b0000000,\n  },\n]\n\nconst WHITE_THREE_PATTERNS: RowPattern[] = [\n  {\n    row: { kind: 'three', size: 6, eyes: [4] },\n    size: 6,\n    rowStart: 0,\n    blacks: 0b000000,\n    whites: 0b001110,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'three', size: 6, eyes: [3] },\n    size: 6,\n    rowStart: 0,\n    blacks: 0b000000,\n    whites: 0b010110,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'three', size: 6, eyes: [2] },\n    size: 6,\n    rowStart: 0,\n    blacks: 0b000000,\n    whites: 0b011010,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n  {\n    row: { kind: 'three', size: 6, eyes: [1] },\n    size: 6,\n    rowStart: 0,\n    blacks: 0b000000,\n    whites: 0b011100,\n    blmask: 0b000000,\n    whmask: 0b000000,\n  },\n]\n\nconst WHITE_FOUR_PATTERNS: RowPattern[] = [\n  {\n    row: { kind: 'four', size: 5, eyes: [4] },\n    size: 5,\n    rowStart: 0,\n    blacks: 0b00000,\n    whites: 0b01111,\n    blmask: 0b00000,\n    whmask: 0b00000,\n  },\n  {\n    row: { kind: 'four', size: 5, eyes: [3] },\n    size: 5,\n    rowStart: 0,\n    blacks: 0b00000,\n    whites: 0b10111,\n    blmask: 0b00000,\n    whmask: 0b00000,\n  },\n  {\n    row: { kind: 'four', size: 5, eyes: [2] },\n    size: 5,\n    rowStart: 0,\n    blacks: 0b00000,\n    whites: 0b11011,\n    blmask: 0b00000,\n    whmask: 0b00000,\n  },\n  {\n    row: { kind: 'four', size: 5, eyes: [1] },\n    size: 5,\n    rowStart: 0,\n    blacks: 0b00000,\n    whites: 0b11101,\n    blmask: 0b00000,\n    whmask: 0b00000,\n  },\n  {\n    row: { kind: 'four', size: 5, eyes: [0] },\n    size: 5,\n    rowStart: 0,\n    blacks: 0b00000,\n    whites: 0b11110,\n    blmask: 0b00000,\n    whmask: 0b00000,\n  },\n]\n\nconst WHITE_FIVE_PATTERNS: RowPattern[] = [\n  {\n    row: { kind: 'five', size: 5, eyes: [] },\n    size: 5,\n    rowStart: 0,\n    blacks: 0b00000,\n    whites: 0b11111,\n    blmask: 0b00000,\n    whmask: 0b00000,\n  }\n]\n\nexport const BLACK_PATTERNS: Record<RowKind, RowPattern[]> = {\n  two: BLACK_TWO_PATTERNS,\n  closedThree: BLACK_CLOSED_THREE_PATTERNS,\n  three: BLACK_THREE_PATTERNS,\n  four: BLACK_FOUR_PATTERNS,\n  five: BLACK_FIVE_PATTERNS,\n  overline: BLACK_OVERLINE_PATTERNS,\n}\n\nexport const WHITE_PATTERNS: Record<RowKind, RowPattern[]> = {\n  two: WHITE_TWO_PATTERNS,\n  closedThree: WHITE_CLOSED_THREE_PATTERNS,\n  three: WHITE_THREE_PATTERNS,\n  four: WHITE_FOUR_PATTERNS,\n  five: WHITE_FIVE_PATTERNS,\n  overline: [],\n}\n\nexport const emptyRowsCache = (): Record<RowKind, undefined> => ({\n  two: undefined,\n  closedThree: undefined,\n  three: undefined,\n  four: undefined,\n  five: undefined,\n  overline: undefined,\n})\n","import {\n  Stones, RowKind, search, emptyRowsCache,\n  BLACK_PATTERNS, WHITE_PATTERNS,\n} from './row'\n\nconst INT_SIZE = 32\n\nexport class Line {\n  readonly size: number\n  readonly blacks: Stones\n  readonly whites: Stones\n  readonly rows: RowsProxy\n\n  constructor (\n    init:\n      | Pick<Line, 'size'>\n      | Pick<Line, 'size' | 'blacks' | 'whites'>\n  ) {\n    this.size = init.size\n    if (this.size < 1 || this.size > INT_SIZE) throw new Error('Wrong size')\n\n    if ('blacks' in init && 'whites' in init) {\n      if ((init.blacks & init.whites) !== 0b0) throw new Error('Black and white stones are overlapping')\n      this.blacks = init.blacks\n      this.whites = init.whites\n    } else {\n      this.blacks = 0b0\n      this.whites = 0b0\n    }\n\n    this.rows = new RowsProxy(this.size, this.blacks, this.whites)\n  }\n\n  put (black: boolean, i: number): Line {\n    return this.overlay(black, 0b1 << i)\n  }\n\n  putMulti (black: boolean, is: number[]): Line {\n    let stones = 0b0\n    for (let n = 0; n < is.length; n++) {\n      stones |= 0b1 << is[n]\n    }\n    return this.overlay(black, stones)\n  }\n\n  remove (i: number): Line {\n    const mask = 0b1 << i\n    const [blacks, whites] = [this.blacks & ~mask, this.whites & ~mask]\n    if (blacks === this.blacks && whites === this.whites) return this\n    return new Line({ size: this.size, blacks: blacks, whites: whites })\n  }\n\n  private overlay (black: boolean, stones: Stones): Line {\n    if (black) {\n      const [blacks, whites] = [this.blacks | stones, this.whites & ~stones]\n      if (blacks === this.blacks) return this\n      return new Line({ size: this.size, blacks: blacks, whites: whites })\n    } else {\n      const [whites, blacks] = [this.whites | stones, this.blacks & ~stones]\n      if (whites === this.whites) return this\n      return new Line({ size: this.size, blacks: blacks, whites: whites })\n    }\n  }\n\n  toSting (): string {\n    let result = ''\n    for (let i = 0; i < this.size; i++) {\n      const pat = 0b1 << i\n      result += (this.blacks & pat) !== 0b0 ? 'o' : ((this.whites & pat) !== 0b0 ? 'x' : '-')\n    }\n    return result\n  }\n}\n\ntype LineRow = {\n  readonly kind: RowKind\n  readonly start: number\n  readonly size: number\n  readonly eyes: number[]\n}\n\nclass RowsProxy {\n  private readonly size: number\n  private readonly blacks: Stones\n  private readonly whites: Stones\n  private readonly blackCache: Record<RowKind, LineRow[] | undefined>\n  private readonly whiteCache: Record<RowKind, LineRow[] | undefined>\n\n  constructor (size: number, blacks: Stones, whites: Stones) {\n    this.size = size\n    this.blacks = blacks\n    this.whites = whites\n\n    this.blackCache = emptyRowsCache()\n    this.whiteCache = emptyRowsCache()\n  }\n\n  get (black: boolean, kind: RowKind): LineRow[] {\n    const cache = black ? this.blackCache : this.whiteCache\n    if (cache[kind] === undefined) {\n      cache[kind] = this.compute(black, kind)\n    }\n    return cache[kind]!\n  }\n\n  private compute (black: boolean, kind: RowKind): LineRow[] {\n    const patterns = black ? BLACK_PATTERNS[kind] : WHITE_PATTERNS[kind]\n\n    // append dummy opponent stones to both line ends\n    const blacks_ = black ? this.blacks << 1 : appendDummies(this.blacks, this.size)\n    const whites_ = black ? appendDummies(this.whites, this.size) : this.whites << 1\n    const size_ = this.size + 2\n\n    return patterns.flatMap(\n      p => search(blacks_, whites_, size_, p).map(\n        i => {\n          // fix index with dummy\n          const start = i - 1\n          return {\n            kind: p.row.kind,\n            start: start,\n            size: p.row.size,\n            eyes: p.row.eyes.map(e => e + start)\n          }\n        }\n      )\n    )\n  }\n}\n\n// e.g. (0b001110, 6) => 0b10011101\nconst appendDummies = (stones: Stones, size: number): Stones => (stones << 1) | 0b1 | (0b1 << (size + 1))\n","import { Point } from '../foundation'\nimport { Line } from './line'\nimport { RowKind, emptyRowsCache } from './row'\n\nconst directions = ['vertical', 'horizontal', 'ascending', 'descending'] as const\ntype Direction = typeof directions[number]\n\ntype Index = [number, number]\n\ntype Facet = [Direction, Line[]]\n\nexport class Square {\n  readonly size: number\n  readonly facets: Facet[]\n  readonly rows: RowsProxy\n\n  constructor (\n    init:\n      | Pick<Square, 'size'>\n      | Pick<Square, 'size' | 'facets'>\n  ) {\n    this.size = init.size\n\n    if ('facets' in init) {\n      this.facets = init.facets\n    } else {\n      this.facets = [\n        ['vertical', newOrthogonalLines(this.size)],\n        ['horizontal', newOrthogonalLines(this.size)],\n        ['ascending', newDiagonalLines(this.size)],\n        ['descending', newDiagonalLines(this.size)],\n      ]\n    }\n\n    this.rows = new RowsProxy(this.size, this.facets)\n  }\n\n  put (black: boolean, p: Point): Square {\n    const bsize = this.size\n    const facets = this.facets.map(\n      ([direction, lines]) => {\n        const [i, j] = toIndex(p, direction, bsize)\n        const newLine = lines[i].put(black, j)\n        const newLines = [...lines.slice(0, i), newLine, ...lines.slice(i + 1, lines.length)]\n        return [direction, newLines] as Facet\n      }\n    )\n    return new Square({ size: this.size, facets: facets })\n  }\n\n  putMulti (black: boolean, ps: Point[]): Square {\n    const bsize = this.size\n    const facets = this.facets.map(\n      ([direction, lines]) => {\n        const m = new Map<number, number[]>()\n        for (let n = 0; n < ps.length; n++) {\n          const [i, j] = toIndex(ps[n], direction, bsize)\n          if (m.has(i)) {\n            m.get(i)!.push(j)\n          } else {\n            m.set(i, [j])\n          }\n        }\n        const newLines = lines.map(\n          (l, i) => m.has(i) ? l.putMulti(black, m.get(i)!) : l\n        )\n        return [direction, newLines] as Facet\n      }\n    )\n    return new Square({ size: this.size, facets: facets })\n  }\n\n  remove (p: Point): Square {\n    const bsize = this.size\n    const facets = this.facets.map(\n      ([direction, lines]) => {\n        const [i, j] = toIndex(p, direction, bsize)\n        const newLine = lines[i].remove(j)\n        const newLines = [...lines.slice(0, i), newLine, ...lines.slice(i + 1, lines.length)]\n        return [direction, newLines] as Facet\n      }\n    )\n    return new Square({ size: this.size, facets: facets })\n  }\n\n  toString (): string {\n    return this.facets.find(([d, _]) => d === 'horizontal')![1].slice().reverse().map(l => l.toSting()).join('\\n')\n  }\n}\n\nconst toIndex = ([x, y]: Point, direction: Direction, bsize: number): Index => {\n  let i: number, j: number\n  switch (direction) {\n    case 'vertical':\n      return [x - 1, y - 1]\n    case 'horizontal':\n      return [y - 1, x - 1]\n    case 'ascending':\n      i = (x - 1) + (bsize - y)\n      j = i < bsize ? (x - 1) : (y - 1)\n      return [i, j]\n    case 'descending':\n      i = (x - 1) + (y - 1)\n      j = i < bsize ? (x - 1) : (bsize - y)\n      return [i, j]\n  }\n}\n\nconst toPoint = ([i, j]: Index, direction: Direction, bsize: number): Point => {\n  let x: number, y: number\n  switch (direction) {\n    case 'vertical':\n      return [i + 1, j + 1]\n    case 'horizontal':\n      return [j + 1, i + 1]\n    case 'ascending':\n      x = i < bsize ? j + 1 : (i + 1) + (j + 1) - bsize\n      y = i < bsize ? bsize - (i + 1) + (j + 1) : j + 1\n      return [x, y]\n    case 'descending':\n      x = i < bsize ? j + 1 : (i + 1) + (j + 1) - bsize\n      y = i < bsize ? (i + 1) - j : bsize - j\n      return [x, y]\n  }\n}\n\nconst newOrthogonalLines = (size: number): Line[] => new Array(size).fill(null).map(\n  () => new Line({ size })\n)\n\nconst newDiagonalLines = (size: number): Line[] => new Array(size * 2 - 1).fill(null).map(\n  (_, i) => new Line({ size: i < size ? i + 1 : size * 2 - 1 - i })\n)\n\nexport type SquareRow = {\n  readonly kind: RowKind\n  readonly direction: Direction\n  readonly start: Point\n  readonly end: Point\n  readonly eyes: Point[]\n}\n\nclass RowsProxy {\n  private readonly size: number\n  private readonly facets: Facet[]\n  private readonly blackCache: Record<RowKind, SquareRow[] | undefined>\n  private readonly whiteCache: Record<RowKind, SquareRow[] | undefined>\n\n  constructor (size: number, facets: Facet[]) {\n    this.size = size\n    this.facets = facets\n\n    this.blackCache = emptyRowsCache()\n    this.whiteCache = emptyRowsCache()\n  }\n\n  get (black: boolean, kind: RowKind): SquareRow[] {\n    const cache = black ? this.blackCache : this.whiteCache\n    if (cache[kind] === undefined) {\n      cache[kind] = this.compute(black, kind)\n    }\n    return cache[kind]!\n  }\n\n  private compute (black: boolean, kind: RowKind): SquareRow[] {\n    const bsize = this.size\n    return this.facets.flatMap(\n      ([direction, lines]) => lines.flatMap(\n        (l, i) => l.rows.get(black, kind).map(\n          lrow => ({\n            kind: lrow.kind,\n            direction: direction,\n            start: toPoint([i, lrow.start], direction, bsize),\n            end: toPoint([i, lrow.start + lrow.size - 1], direction, bsize),\n            eyes: lrow.eyes.map(j => toPoint([i, j], direction, bsize)),\n          })\n        )\n      )\n    )\n  }\n}\n","import { Point } from '../foundation'\nimport { Square, SquareRow } from './square'\n\nexport const forbiddenKinds = ['doubleThree', 'doubleFour', 'overline'] as const\nexport type ForbiddenKind = typeof forbiddenKinds[number]\n\nexport const forbidden = (square: Square, point: Point): ForbiddenKind | undefined => {\n  if (overline(square, point)) {\n    return 'overline'\n  } else if (doubleFour(square, point)) {\n    return 'doubleFour'\n  } else if (doubleThree(square, point)) {\n    return 'doubleThree'\n  }\n}\n\nconst overline = (square: Square, point: Point): boolean => {\n  const next = square.put(true, point)\n  const newOverlines = next.rows.get(true, 'overline').filter(r => between(point, r))\n  return newOverlines.length > 0\n}\n\nconst doubleFour = (square: Square, point: Point): boolean => {\n  const next = square.put(true, point)\n  const newFours = next.rows.get(true, 'four').filter(r => between(point, r))\n  if (newFours.length < 2) return false\n\n  // checking not open four\n  return distinct(newFours).length >= 2\n}\n\nconst doubleThree = (square: Square, point: Point): boolean => {\n  const next = square.put(true, point)\n  const newThrees = next.rows.get(true, 'three').filter(r => between(point, r))\n  if (newThrees.length < 2) return false\n\n  // checking not fake three\n  const trueThrees = newThrees.filter(t => !forbidden(next, t.eyes[0]))\n  if (trueThrees.length < 2) return false\n\n  // checking not open three\n  return distinct(trueThrees).length >= 2\n}\n\nconst between = (p: Point, r: SquareRow): boolean => {\n  const [s, e] = [r.start, r.end]\n  switch (r.direction) {\n    case 'vertical':\n      return p[0] === s[0] && (s[1] <= p[1] && p[1] <= e[1])\n    case 'horizontal':\n      return p[1] === s[1] && (s[0] <= p[0] && p[0] <= e[0])\n    case 'ascending':\n      return (s[0] <= p[0] && p[0] <= e[0]) && (p[0] - s[0] === p[1] - s[1])\n    case 'descending':\n      return (s[0] <= p[0] && p[0] <= e[0]) && (p[0] - s[0] === s[1] - p[1])\n  }\n}\n\nconst distinct = (srows: SquareRow[]): SquareRow[] => {\n  const result: SquareRow[] = []\n  for (let i = 0; i < srows.length; i++) {\n    const srow = srows[i]\n    if (result.findIndex(r => adjacent(srow, r)) < 0) {\n      result.push(srow)\n    }\n  }\n  return result\n}\n\nconst adjacent = (a: SquareRow, b: SquareRow): boolean => {\n  if (a.direction !== b.direction) return false\n  const [xd, yd] = [a.start[0] - b.start[0], a.start[1] - b.start[1]]\n  switch (a.direction) {\n    case 'vertical':\n      return xd === 0 && Math.abs(yd) === 1\n    case 'horizontal':\n      return Math.abs(xd) === 1 && yd === 0\n    case 'ascending':\n      return Math.abs(xd) === 1 && xd === yd\n    case 'descending':\n      return Math.abs(xd) === 1 && xd === -yd\n  }\n}\n","import { Point, equal } from '../foundation'\nimport { Square } from './square'\nimport { forbidden } from './forbidden'\nimport { RowKind, emptyRowsCache } from './row'\n\nexport class Board {\n  readonly size: number\n  readonly blacks: Point[]\n  readonly whites: Point[]\n  readonly properties: PropertiesProxy\n\n  private readonly square: Square\n\n  private forbiddensCache: Point[] | undefined\n\n  constructor (\n    init:\n      | Pick<Board, 'size'>\n      | Pick<Board, 'size' | 'blacks' | 'whites'>\n      | Pick<Board, 'size' | 'blacks' | 'whites'> & { square: Square }\n  ) {\n    this.size = init.size\n\n    if ('blacks' in init && 'whites' in init) {\n      this.blacks = init.blacks\n      this.whites = init.whites\n    } else {\n      this.blacks = []\n      this.whites = []\n    }\n\n    if ('square' in init) {\n      this.square = init.square\n    } else {\n      this.square = new Square({ size: this.size }).putMulti(true, this.blacks).putMulti(false, this.whites)\n    }\n\n    this.properties = new PropertiesProxy(this.square)\n  }\n\n  put (black: boolean, p: Point): Board {\n    if (this.hasStone(p)) return this\n    return new Board({\n      size: this.size,\n      blacks: black ? [...this.blacks, p] : this.blacks,\n      whites: black ? this.whites : [...this.whites, p],\n      square: this.square.put(black, p),\n    })\n  }\n\n  remove (p: Point): Board {\n    if (!this.hasStone(p)) return this\n    const bi = this.blacks.findIndex(q => equal(p, q))\n    const wi = this.whites.findIndex(q => equal(p, q))\n    return new Board({\n      size: this.size,\n      blacks: bi >= 0 ? remove(this.blacks, bi) : this.blacks,\n      whites: wi >= 0 ? remove(this.whites, wi) : this.whites,\n      square: this.square.remove(p),\n    })\n  }\n\n  hasStone (p: Point): boolean {\n    return (\n      (this.blacks.findIndex(q => equal(p, q)) >= 0) ||\n      (this.whites.findIndex(q => equal(p, q)) >= 0)\n    )\n  }\n\n  forbidden (p: Point): boolean {\n    return !this.hasStone(p) && forbidden(this.square, p) !== undefined\n  }\n\n  get forbiddens (): Point[] {\n    if (this.forbiddensCache === undefined) {\n      this.forbiddensCache = this.computeForbiddens()\n    }\n    return this.forbiddensCache\n  }\n\n  private computeForbiddens (): Point[] {\n    const result: Point[] = []\n    for (let x = 1; x <= this.size; x++) {\n      for (let y = 1; y <= this.size; y++) {\n        if (this.hasStone([x, y])) continue\n        if (forbidden(this.square, [x, y])) {\n          result.push([x, y])\n        }\n      }\n    }\n    return result\n  }\n\n  toString (): string {\n    return this.square.toString()\n  }\n}\n\nexport type Property = {\n  kind: RowKind\n  start: Point\n  end: Point // inclusive\n  eyes: Point[]\n}\n\nclass PropertiesProxy {\n  private readonly square: Square\n  private readonly blackCache: Record<RowKind, Property[] | undefined>\n  private readonly whiteCache: Record<RowKind, Property[] | undefined>\n\n  constructor (square: Square) {\n    this.square = square\n\n    this.blackCache = emptyRowsCache()\n    this.whiteCache = emptyRowsCache()\n  }\n\n  get (black: boolean, kind: RowKind): Property[] {\n    const cache = black ? this.blackCache : this.whiteCache\n    if (cache[kind] === undefined) {\n      cache[kind] = this.compute(black, kind)\n    }\n    return cache[kind]!\n  }\n\n  private compute (black: boolean, kind: RowKind): Property[] {\n    return this.square.rows.get(black, kind).map(\n      srow => ({\n        kind: srow.kind,\n        start: srow.start,\n        end: srow.end,\n        eyes: srow.eyes,\n      })\n    )\n  }\n}\n\nconst remove = <T>(a: Array<T>, i: number): Array<T> => [...a.slice(0, i), ...a.slice(i + 1, a.length)]\n","import { Point, equal } from '../foundation'\n\nexport class Game {\n  readonly moves: Point[]\n\n  constructor (init: {} | Pick<Game, 'moves'>) {\n    if ('moves' in init) {\n      this.moves = init.moves\n    } else {\n      this.moves = []\n    }\n  }\n\n  move (p: Point): Game | undefined {\n    if (!this.movable(p)) return undefined\n    return new Game({\n      moves: [...this.moves, p],\n    })\n  }\n\n  undo (): Game | undefined {\n    if (this.moves.length === 0) return undefined\n    return new Game({\n      moves: this.moves.slice(0, this.moves.length - 1),\n    })\n  }\n\n  movable (p: Point): boolean {\n    return this.moves.findIndex(q => equal(p, q)) < 0\n  }\n\n  fork (i: number): Game {\n    return new Game({ moves: this.moves.slice(0, i) })\n  }\n\n  get blacks (): Point[] {\n    return this.moves.filter((_, i) => i % 2 === 0)\n  }\n\n  get whites (): Point[] {\n    return this.moves.filter((_, i) => i % 2 !== 0)\n  }\n\n  get isBlackTurn (): boolean {\n    return this.moves.length % 2 === 0\n  }\n\n  get isFirstTurn (): boolean {\n    return this.isBlackTurn\n  }\n}\n","import { Game, Board, N_LINES, Point } from '../rule'\n\nexport class State {\n  readonly game: Game\n  readonly cursor: number\n  readonly board: Board\n\n  constructor (init: {} | Pick<State, 'game' | 'cursor' | 'board'>) {\n    if ('game' in init) {\n      this.game = init.game\n      this.cursor = init.cursor\n      this.board = init.board\n    } else {\n      this.game = new Game({})\n      this.cursor = 0\n      this.board = new Board({ size: N_LINES })\n    }\n  }\n\n  move (p: Point): State {\n    if (!this.canMove) return this\n    if (this.game.isBlackTurn && this.board.forbidden(p)) return this\n\n    const game = this.game.move(p)\n    if (game === undefined) return this\n    return new State({\n      game: game,\n      board: this.board.put(this.game.isBlackTurn, p),\n      cursor: this.cursor + 1,\n    })\n  }\n\n  undo (): State {\n    if (!this.canUndo) return this\n\n    const game = this.game.undo()\n    if (game === undefined) return this\n    return new State({\n      game: game,\n      board: this.board.remove(this.game.moves[this.game.moves.length - 1]),\n      cursor: this.cursor - 1,\n    })\n  }\n\n  reset (): State {\n    if (!this.canReset) return this\n    return new State({})\n  }\n\n  forward (): State {\n    if (this.isLast) return this\n    return new State({\n      game: this.game,\n      board: this.board.put(this.cursor % 2 === 0, this.game.moves[this.cursor]),\n      cursor: this.cursor + 1,\n    })\n  }\n\n  backward (): State {\n    if (this.isStart) return this\n    return new State({\n      game: this.game,\n      board: this.board.remove(this.game.moves[this.cursor - 1]),\n      cursor: this.cursor - 1,\n    })\n  }\n\n  jump (i: number): State {\n    if (i < 0 || this.game.moves.length < i) return this\n    const forked = this.game.fork(i)\n    return new State({\n      game: this.game,\n      board: new Board({\n        size: this.board.size,\n        blacks: forked.blacks,\n        whites: forked.whites,\n      }),\n      cursor: i,\n    })\n  }\n\n  toStart (): State {\n    return this.jump(0)\n  }\n\n  toLast (): State {\n    return this.jump(this.game.moves.length)\n  }\n\n  get isStart (): boolean {\n    return this.cursor === 0\n  }\n\n  get isLast (): boolean {\n    return this.cursor === this.game.moves.length\n  }\n\n  get canMove (): boolean {\n    return this.isLast\n  }\n\n  get canUndo (): boolean {\n    return this.isLast && !this.isStart\n  }\n\n  get canReset (): boolean {\n    return this.game.moves.length > 0\n  }\n\n  get moves (): Point[] {\n    return this.game.moves.slice(0, this.cursor)\n  }\n}\n","import { Point } from '../rule'\n\nexport const xCode = (x: number) => 'ABCDEFGHIJKLMNO'.charAt(x - 1)\n\nexport const yCode = (x: number) => x.toString()\n\nexport const code = ([x, y]: Point): string => `${xCode(x)}${yCode(y)}`\n","import { N_LINES, Point } from '../../rule'\n\nexport const N = N_LINES\n\nexport const INDICES = new Array(N_LINES).fill(null).map((_, i) => i + 1)\n\nexport const cx = (x: number, C: number): number => x * C\nexport const cy = (y: number, C: number): number => (N - y + 1) * C\n\n// center of the point\nexport const center = ([x, y]: Point, C: number): [number, number] => [cx(x, C), cy(y, C)]\n\n// square around center of the point\nexport const square = ([x, y]: Point, C: number): [[number, number], [number, number]] => {\n  const [cx, cy] = center([x, y], C)\n  return [\n    [cx - C / 2, cy - C / 2],\n    [cx + C / 2, cy + C / 2],\n  ]\n}\n","import React, { FC } from 'react'\n\nimport { Point } from '../../rule'\nimport { xCode, yCode } from '../code'\nimport { N, INDICES, cx, cy } from './coordinate'\n\ntype DefaultProps = {\n  C: number\n  showIndices: boolean\n}\n\nconst Default: FC<DefaultProps> = ({\n  C,\n  showIndices,\n}) => {\n  return <g>\n    <Rulers C={C} />\n    <Stars C={C} />\n    {showIndices && <Indices C={C} />}\n  </g>\n}\n\nconst Rulers: FC<{C: number}> = ({ C }) => {\n  const verticalLines = INDICES.map(\n    (x, key) => <line\n      key={key}\n      x1={cx(x, C)} y1={cy(1, C)} x2={cx(x, C)} y2={cy(N, C)}\n      stroke=\"darkgray\" strokeWidth={2}\n    />\n  )\n  const horizontalLines = INDICES.map(\n    (y, key) => <line\n      key={key}\n      x1={cx(1, C)} y1={cy(y, C)} x2={cx(N, C)} y2={cy(y, C)}\n      stroke=\"darkgray\" strokeWidth={2}\n    />\n  )\n  return <g>\n    {verticalLines}\n    {horizontalLines}\n  </g>\n}\n\nconst Stars: FC<{\n  C: number\n  points?: Point[] | undefined\n}> = ({\n  C,\n  points = [[4, 4], [4, 12], [8, 8], [12, 4], [12, 12]],\n}) => {\n  return <g>\n    {\n      points.map(\n        ([x, y], key) => <circle\n          key={key}\n          cx={cx(x, C)} cy={cy(y, C)} r={C * 1 / 10}\n          fill=\"gray\"\n        />\n      )\n    }\n  </g>\n}\n\nconst Indices: FC<{C: number}> = ({ C }) => {\n  const fill = 'gray'\n  const fontSize = `${C * 4 / 10}px`\n  const fontFamily = 'Noto Sans'\n  const xIndices = INDICES.map(\n    (x, key) => <text\n      key={key}\n      x={cx(x, C)} y={cy(1, C) + C}\n      textAnchor=\"middle\"\n      fontFamily={fontFamily} fontSize={fontSize}\n      fill={fill}\n    >\n      {xCode(x)}\n    </text>\n  )\n  const yIndices = INDICES.map(\n    (y, key) => <text\n      key={key}\n      x={cx(1, C) - C * 0.8} y={cy(y, C)}\n      textAnchor=\"middle\" dominantBaseline=\"central\"\n      fontFamily={fontFamily} fontSize={fontSize}\n      fill={fill}\n    >\n      {yCode(y)}\n    </text>\n  )\n  return <g>\n    { xIndices }\n    { yIndices }\n  </g>\n}\n\nexport default Default\n","import React, { FC } from 'react'\n\nimport { Point } from '../../rule'\nimport { N } from './coordinate'\n\ntype DefaultProps = {\n  C: number\n  moves?: Point[] | undefined\n  stones?: {\n    blacks: Point[]\n    whites: Point[]\n  } | undefined\n  showOrders?: boolean | undefined\n  emphasizeLastMove?: boolean | undefined\n}\n\nconst Default: FC<DefaultProps> = ({\n  C,\n  moves,\n  stones,\n  showOrders,\n  emphasizeLastMove,\n}) => {\n  if (moves === undefined && stones === undefined) throw new Error('moves or stones required')\n  if (moves === undefined && showOrders) throw new Error('moves required to show orders')\n  if (moves === undefined && emphasizeLastMove) throw new Error('moves required to emphasize last')\n  const blacks = stones ? stones.blacks : moves!.filter((_, i) => i % 2 === 0)\n  const whites = stones ? stones.whites : moves!.filter((_, i) => i % 2 === 1)\n  return <g>\n    {\n      emphasizeLastMove && moves && moves.length >= 1 &&\n      <LastMarker\n        C={C}\n        point={moves[moves.length - 1]}\n      />\n    }\n    <Stones\n      C={C}\n      black={true}\n      points={blacks}\n    />\n    <Stones\n      C={C}\n      black={false}\n      points={whites}\n    />\n    {\n      moves && showOrders &&\n      <Orders\n        C={C}\n        moves={moves}\n      />\n    }\n  </g>\n}\n\ntype StonesProps = {\n  C: number\n  black: boolean\n  points: Point[]\n}\n\nconst Stones: FC<StonesProps> = ({\n  C,\n  black,\n  points,\n}) => {\n  const circles = points.map(\n    (p, key) => {\n      return <Stone C={C} key={key} black={black} point={p} />\n    }\n  )\n  return <g>\n    { circles }\n  </g>\n}\n\ntype OrdersProps = {\n  C: number\n  moves: Point[]\n}\n\nconst Orders: FC<OrdersProps> = ({\n  C,\n  moves,\n}) => {\n  const texts = moves.map(\n    ([x, y], key) => {\n      const fill = key % 2 === 0 ? 'whitesmoke' : 'dimgray'\n      return <text\n        key={key}\n        x={x * C} y={(N - y + 1) * C}\n        textAnchor=\"middle\"\n        dominantBaseline=\"central\"\n        fontFamily=\"Noto Serif\"\n        fontSize=\"16px\"\n        fill={fill}\n      >\n        {key + 1}\n      </text>\n    }\n  )\n  return <g>\n    { texts }\n  </g>\n}\n\ntype StoneProps = {\n  C: number\n  black: boolean\n  point: Point\n}\n\nconst Stone: FC<StoneProps> = ({\n  C,\n  black,\n  point,\n}) => {\n  const [x, y] = point\n  return <circle\n    cx={x * C} cy={(N - y + 1) * C}\n    r={(C / 2) * 9 / 10}\n    fill={black ? '#333333' : 'white'}\n    stroke=\"black\" strokeWidth={1.5} strokeOpacity={black ? 0.3 : 0.6}\n  />\n}\n\ntype LastMarkerProps = {\n  C: number\n  point: Point\n}\n\nconst LastMarker: FC<LastMarkerProps> = ({\n  C,\n  point,\n}) => {\n  const [x, y] = point\n  return <circle\n    cx={x * C} cy={(N - y + 1) * C}\n    r={(C / 2) * 21 / 20}\n    fill=\"violet\"\n  />\n}\n\nexport default Default\n","import React, { FC } from 'react'\n\nimport { Board, Point, Property } from '../../rule'\n\nimport { N } from './coordinate'\n\ntype DefaultProps = {\n  C: number\n  board: Board\n  showForbiddens: boolean\n  showPropertyRows: boolean\n  showPropertyEyes: boolean\n}\n\nconst Default: FC<DefaultProps> = ({\n  C,\n  board,\n  showForbiddens,\n  showPropertyRows,\n  showPropertyEyes,\n}) => {\n  return <g>\n    {\n      showPropertyRows &&\n      <>\n        <PropertyRows\n          C={C}\n          black={true}\n          properties={board.properties.get(true, 'two')}\n        />\n        <PropertyRows\n          C={C}\n          black={true}\n          properties={board.properties.get(true, 'closedThree')}\n        />\n        <PropertyRows\n          C={C}\n          black={false} properties={board.properties.get(false, 'two')}\n        />\n        <PropertyRows\n          C={C}\n          black={false}\n          properties={board.properties.get(false, 'closedThree')}\n        />\n        <PropertyRows\n          C={C}\n          black={true}\n          properties={board.properties.get(true, 'three')}\n        />\n        <PropertyRows\n          C={C}\n          black={true}\n          properties={board.properties.get(true, 'four')}\n        />\n        <PropertyRows\n          C={C}\n          black={false} properties={board.properties.get(false, 'three')}\n        />\n        <PropertyRows\n          C={C}\n          black={false} properties={board.properties.get(false, 'four')}\n        />\n      </>\n    }\n    {\n      showPropertyEyes &&\n      <>\n        <PropertyEyes\n          C={C}\n          black={true}\n          properties={board.properties.get(true, 'three')}\n        />\n        <PropertyEyes\n          C={C}\n          emphasize\n          black={true}\n          properties={board.properties.get(true, 'four')}\n        />\n        <PropertyEyes\n          C={C}\n          black={false}\n          properties={board.properties.get(false, 'three')}\n        />\n        <PropertyEyes\n          C={C}\n          black={false}\n          properties={board.properties.get(false, 'four')}\n          emphasize\n        />\n      </>\n    }\n    {\n      showForbiddens &&\n      <Forbiddens\n        C={C}\n        points={board.forbiddens}\n      />\n    }\n  </g>\n}\n\ntype ForbiddensProps = {\n  C: number\n  points: Point[]\n}\n\nconst Forbiddens: FC<ForbiddensProps> = ({\n  C,\n  points,\n}) => {\n  const crosses = points.map(\n    ([x, y], key) => {\n      const [cx, cy] = [x * C, (N - y + 1) * C]\n      const [x1, x2, y1, y2] = [\n        cx - C * 2 / 10,\n        cx + C * 2 / 10,\n        cy + C * 2 / 10,\n        cy - C * 2 / 10,\n      ]\n      return <g key={key} >\n        <line\n          x1={x1} y1={y1}\n          x2={x2} y2={y2}\n          stroke=\"red\"\n          strokeWidth={4} opacity={0.5}\n        />\n        <line\n          x1={x1} y1={y2}\n          x2={x2} y2={y1}\n          stroke=\"red\"\n          strokeWidth={4} opacity={0.5}\n        />\n      </g>\n    }\n  )\n  return <g>\n    { crosses }\n  </g>\n}\n\ntype PropertiesProps = {\n  C: number\n  black: boolean\n  properties: Property[]\n  emphasize?: boolean | undefined\n}\n\nconst PropertyRows: FC<PropertiesProps> = ({\n  C,\n  black,\n  properties,\n}) => {\n  const stroke = black ? 'blue' : 'darkgreen'\n  const lines = properties.map(\n    (prop, key) => {\n      const [p1x, p1y] = prop.start\n      const [p2x, p2y] = prop.end\n      const [x1, y1] = [p1x * C, (N - p1y + 1) * C]\n      const [x2, y2] = [p2x * C, (N - p2y + 1) * C]\n      return <g key={key}>\n        { (x1 === x2 || y1 === y2) &&\n          <line\n            x1={x1} y1={y1}\n            x2={x2} y2={y2}\n            stroke=\"white\"\n            strokeLinecap=\"butt\" strokeWidth={4}\n            opacity={0.6}\n          />\n        }\n        <line\n          x1={x1} y1={y1}\n          x2={x2} y2={y2}\n          stroke={stroke}\n          strokeLinecap=\"round\" strokeWidth={4}\n          opacity={0.4} strokeDasharray={'3,5'}\n        />\n      </g>\n    }\n  )\n  return <g>\n    { lines }\n  </g>\n}\n\nconst PropertyEyes: FC<PropertiesProps> = ({\n  C,\n  black,\n  properties,\n  emphasize,\n}) => {\n  const fill = black ? 'blue' : 'darkgreen'\n  const gs = properties.map(\n    (prop, m) => {\n      const rects = prop.eyes.map(\n        ([x, y], n) => {\n          const [cx, cy] = [x * C, (N - y + 1) * C]\n          return (\n            emphasize\n              ? <Diamond key={n} cx={cx} cy={cy} fill={fill} r={8} />\n              : <circle key={n} cx={cx} cy={cy} r={8} fill={fill} stroke={undefined} fillOpacity={0.4}/>\n          )\n        }\n      )\n      return <g key={m}>\n        { rects }\n      </g>\n    }\n  )\n  return <g>\n    { gs }\n  </g>\n}\n\nconst Diamond: FC<{cx: number, cy: number, r: number, fill: string}> = ({\n  cx,\n  cy,\n  r,\n  fill,\n}) => <g transform={`rotate(45, ${cx}, ${cy})`}>\n  <rect\n    x={cx - r} y={cy - r}\n    width={r * 2} height={r * 2}\n    stroke={undefined}\n    fill={fill} fillOpacity={0.7}\n  />\n</g>\n\nexport default Default\n","import React, { FC } from 'react'\n\nimport { Point, N_LINES } from '../../rule'\nimport { State } from '../../state'\nimport Base from './Base'\nimport Stones from './Stones'\nimport Properties from './Properties'\nimport { Preference } from '../preference'\n\ntype DefaultProps = {\n  width: number\n  state: State\n  setState: (s: State) => void\n  preference: Preference\n}\n\nconst Default: FC<DefaultProps> = ({\n  width,\n  state,\n  setState,\n  preference,\n}) => {\n  const [W, C] = width >= 640 ? [640, 40] : [320, 20]\n  const onClickBoard = (e: React.MouseEvent<SVGElement, MouseEvent>) => {\n    const base = e.currentTarget.getBoundingClientRect()\n    const [bx, by] = [e.clientX - base.x, e.clientY - base.y]\n    const p: Point = [adjust(bx / C), adjust((W - by) / C)]\n    setState(state.move(p))\n  }\n  return <svg width={W} height={W} onClick={onClickBoard}>\n    <Base\n      C={C}\n      showIndices={preference.showIndices}\n    />\n    <Properties\n      C={C}\n      board={state.board}\n      showForbiddens={preference.showForbiddens}\n      showPropertyRows={preference.showPropertyRows}\n      showPropertyEyes={preference.showPropertyEyes}\n    />\n    <Stones\n      C={C}\n      moves={state.moves}\n      showOrders={preference.showOrders}\n      emphasizeLastMove={preference.emphasizeLastMove}\n    />\n  </svg>\n}\n\nconst adjust = (n: number): number => Math.min(Math.max(1, Math.round(n)), N_LINES)\n\nexport default Default\n","import React, { FC } from 'react'\nimport {\n  Flex,\n  IconButton,\n  Switch,\n  FormLabel,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverArrow,\n  PopoverBody,\n} from '@chakra-ui/core'\nimport { FiToggleRight } from 'react-icons/fi'\n\nimport { Preference } from '../preference'\n\ntype DefaultProps = {\n  preference: Preference,\n  setPreference: (p: Preference) => void,\n}\n\nconst Default: FC<DefaultProps> = ({\n  preference,\n  setPreference,\n}) => {\n  const isAllChecked = (preference.showIndices &&\n  preference.showOrders &&\n  preference.emphasizeLastMove &&\n  preference.showForbiddens &&\n  preference.showPropertyRows &&\n  preference.showPropertyEyes\n  )\n  return (\n    <Popover\n      placement=\"bottom\"\n    >\n      <PopoverTrigger>\n        <IconButton\n          icon={FiToggleRight} aria-label=\"preference\"\n          variant=\"ghost\"\n        />\n      </PopoverTrigger>\n      <PopoverContent\n        zIndex={4}\n      >\n        <PopoverArrow />\n        <PopoverBody fontFamily=\"Noto Sans\" fontWeight=\"normal\">\n          <Flex justify=\"space-between\" align=\"center\">\n            <FormLabel htmlFor=\"controller-preference-all\">All</FormLabel>\n            <Switch\n              id=\"controller-preference-all\"\n              isChecked={isAllChecked}\n              onChange={() => {\n                if (isAllChecked) {\n                  setPreference({\n                    showIndices: false,\n                    showOrders: false,\n                    emphasizeLastMove: false,\n                    showForbiddens: false,\n                    showPropertyRows: false,\n                    showPropertyEyes: false,\n                  })\n                } else {\n                  setPreference({\n                    showIndices: true,\n                    showOrders: true,\n                    emphasizeLastMove: true,\n                    showForbiddens: true,\n                    showPropertyRows: true,\n                    showPropertyEyes: true,\n                  })\n                }\n              }}\n            />\n          </Flex>\n          <Flex justify=\"space-between\" align=\"center\">\n            <FormLabel htmlFor=\"controller-preference-show-indices\">Line indices</FormLabel>\n            <Switch\n              id=\"controller-preference-show-indices\"\n              isChecked={preference.showIndices}\n              onChange={() => setPreference({ ...preference, showIndices: !preference.showIndices })}\n            />\n          </Flex>\n          <Flex justify=\"space-between\" align=\"center\">\n            <FormLabel htmlFor=\"controller-preference-show-orders\">Move orders</FormLabel>\n            <Switch\n              id=\"controller-preference-show-orders\"\n              isChecked={preference.showOrders}\n              onChange={() => setPreference({ ...preference, showOrders: !preference.showOrders })}\n            />\n          </Flex>\n          <Flex justify=\"space-between\" align=\"center\">\n            <FormLabel htmlFor=\"controller-preference-emphasize-last-move\">Last move</FormLabel>\n            <Switch\n              id=\"controller-preference-emphasize-last-move\"\n              isChecked={preference.emphasizeLastMove}\n              onChange={() => setPreference({ ...preference, emphasizeLastMove: !preference.emphasizeLastMove })}\n            />\n          </Flex>\n          <Flex justify=\"space-between\" align=\"center\">\n            <FormLabel htmlFor=\"controller-preference-show-forbiddens\">Forbiddens</FormLabel>\n            <Switch\n              id=\"controller-preference-show-forbiddens\"\n              isChecked={preference.showForbiddens}\n              onChange={() => setPreference({ ...preference, showForbiddens: !preference.showForbiddens })}\n            />\n          </Flex>\n          <Flex justify=\"space-between\" align=\"center\">\n            <FormLabel htmlFor=\"controller-preference-show-property-eyes\">Row eyes</FormLabel>\n            <Switch id=\"controller-preference-show-property-eyes\"\n              isChecked={preference.showPropertyEyes}\n              onChange={() => setPreference({ ...preference, showPropertyEyes: !preference.showPropertyEyes })}\n            />\n          </Flex>\n          <Flex justify=\"space-between\" align=\"center\">\n            <FormLabel htmlFor=\"controller-preference-show-property-rows\">Row lines</FormLabel>\n            <Switch\n              id=\"controller-preference-show-property-rows\"\n              isChecked={preference.showPropertyRows}\n              onChange={() => setPreference({ ...preference, showPropertyRows: !preference.showPropertyRows })}\n            />\n          </Flex>\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  )\n}\n\nexport default Default\n","import React, { FC } from 'react'\nimport {\n  Flex,\n  Button,\n  IconButton,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverArrow,\n} from '@chakra-ui/core'\nimport {\n  FiChevronLeft,\n  FiChevronRight,\n  FiChevronsLeft,\n  FiChevronsRight,\n  FiX,\n  FiShare,\n  FiLoader,\n} from 'react-icons/fi'\n\nimport { State } from '../../state'\nimport { Preference } from '../preference'\nimport PreferencePopover from './PreferencePopover'\n\ntype DefaultProps = {\n  width: number\n  state: State\n  setState: (s: State) => void\n  preference: Preference,\n  setPreference: (p: Preference) => void,\n}\n\nconst Default: FC<DefaultProps> = ({\n  width,\n  state,\n  setState,\n  preference,\n  setPreference,\n}) => {\n  return <Flex width={width} justifyContent=\"space-around\" alignItems=\"center\">\n    <PreferencePopover\n      preference={preference}\n      setPreference={setPreference}\n    />\n    <ResetPopover\n      state={state}\n      setState={setState}\n    />\n    <Flex justifyContent=\"center\" alignItems=\"center\">\n      <IconButton\n        onClick={() => setState(state.toStart())}\n        icon={FiChevronsLeft} aria-label=\"to start\"\n        variant=\"ghost\"\n        isDisabled={state.isStart}\n      />\n      <IconButton\n        onClick={() => setState(state.backward())}\n        icon={FiChevronLeft} aria-label=\"backward\"\n        variant=\"ghost\"\n        isDisabled={state.isStart}\n      />\n      <Button width={6}\n        variant=\"ghost\" fontFamily=\"Noto Serif\" fontWeight=\"normal\"\n        isDisabled={true}\n      >\n        {state.cursor}\n      </Button>\n      <IconButton\n        onClick={() => setState(state.forward())}\n        icon={FiChevronRight} aria-label=\"forward\"\n        variant=\"ghost\"\n        isDisabled={state.isLast}\n      />\n      <IconButton\n        onClick={() => setState(state.toLast())}\n        icon={FiChevronsRight} aria-label=\"to last\"\n        variant=\"ghost\"\n        isDisabled={state.isLast}\n      />\n    </Flex>\n    <IconButton\n      onClick={() => setState(state.undo())}\n      icon={FiX} aria-label=\"undo\"\n      variant=\"ghost\"\n      isDisabled={!state.canUndo}\n    />\n    <IconButton\n      icon={FiShare} aria-label=\"share\"\n      variant=\"ghost\"\n      isDisabled={true}\n    />\n  </Flex>\n}\n\ntype ResetPopoverProps = {\n  state: State\n  setState: (s: State) => void\n}\n\nconst ResetPopover: FC<ResetPopoverProps> = ({\n  state,\n  setState,\n}) => {\n  return (\n    <Popover\n      placement=\"bottom\"\n    >\n      {\n        ({ onClose }) => (\n          <>\n            <PopoverTrigger>\n              <IconButton\n                icon={FiLoader} aria-label=\"reset\"\n                variant=\"ghost\"\n                isDisabled={!state.canReset}\n              />\n            </PopoverTrigger>\n            <PopoverContent\n              zIndex={4}\n              width={16}\n            >\n              <PopoverArrow />\n              <Button\n                as=\"button\"\n                size=\"sm\"\n                variant=\"ghost\"\n                variantColor=\"red\"\n                fontFamily=\"Noto Sans\" fontWeight=\"normal\"\n                onClick={() => {\n                  setState(state.reset())\n                  if (onClose) onClose()\n                }}\n              >\n                RESET\n              </Button>\n            </PopoverContent>\n          </>\n        )\n      }\n    </Popover>\n  )\n}\n\nexport default Default\n","import React, { FC, useState } from 'react'\nimport { Stack, Text, Flex } from '@chakra-ui/core'\n\nimport { State } from '../state'\nimport Board from './Board'\nimport Controller from './Controller'\nimport { Preference } from './preference'\n\ntype DefaultProps = {\n  width: number\n}\n\nconst Default: FC<DefaultProps> = ({\n  width,\n}) => {\n  const [state, setState] = useState<State>(new State({}))\n  const [preference, setPreference] = useState<Preference>({\n    showIndices: false,\n    showOrders: false,\n    emphasizeLastMove: false,\n    showForbiddens: false,\n    showPropertyRows: false,\n    showPropertyEyes: false,\n  })\n  return (\n    <Flex justify=\"center\">\n      <Stack spacing={4} my={2}>\n        <Flex justify=\"center\" align=\"center\">\n          <Text\n            as=\"h1\" textAlign=\"center\"\n            fontFamily=\"Noto Sans\" fontWeight=\"normal\" color=\"gray.500\"\n          >\n            Renju Note BETA\n          </Text>\n        </Flex>\n        <Flex justify=\"center\" align=\"center\">\n          <Board\n            width={width}\n            state={state}\n            setState={setState}\n            preference={preference}\n          />\n        </Flex>\n        <Flex justify=\"center\" align=\"center\">\n          <Controller\n            width={width}\n            state={state}\n            setState={setState}\n            preference={preference}\n            setPreference={setPreference}\n          />\n        </Flex>\n      </Stack>\n    </Flex>\n  )\n}\n\nexport default Default\n","import React, { FC } from 'react'\nimport { ThemeProvider, CSSReset } from '@chakra-ui/core'\n\nimport Main from './Main'\n\nimport './App.css'\n\nconst App: FC = () => {\n  const width = window.innerWidth >= 640 ? 640 : 320\n  return <ThemeProvider>\n    <CSSReset />\n    <Main width={width} />\n  </ThemeProvider>\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register (config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}